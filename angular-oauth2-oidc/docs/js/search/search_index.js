var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["0","0.33","0.5","1","2","20","20.000","4","4202","4202]/index.html","4202]/silent","4711","4th","75","8089|4200","access","access_token","add","addit","adjust","against","allow","alreadi","although","angular","angular/cor","angular2","anoth","api","app","app/home.html","appcompon","applic","appmodul","approach","approutermodul","asset","assum","at_hash","auth","author","automat","avoid","back","backend","base","bearer","befor","below","between","bootstrap","break","browser","build","bundl","call","callback","case","catch(err","chang","cite","claim","claims.given_nam","class","cli","cli.json","client","clientid","code","commonj","commun","compens","compon","configu","configur","connect","consol","console.debug(\"log","console.debug('given_nam","console.debug('oauth/oidc","console.debug('ok","console.debug('refresh","console.debug('st","console.debug(context","console.error('refresh","constructor","constructor(priv","contain","context","cooki","copi","core","credenti","credit","current","custom","customqueryparam","data","decid","declar","default","defin","demand","demo","demonstr","describ","design","directli","directori","disabl","discoveri","document","don't","dosn't","dummi","dummyclientsecret","e","e.typ","eas","email","enabl","endpoint","endpont","enter","environ","err));when","error","event","exampl","expir","explicitli","export","fact","factor","fail","fals","featur","fetch","file","filter(","fire","first","flow","follow","form","former","fragment","further","g","geheim","geheim').then","geheim').then((resp","gener","get","give","half","hallo","hash","hashlocationstrategi","hashstrategi","header","here","hidden","his/her","home","homecompon","hook","http","http://localhost:8080","http://localhost:8080/#/homeev","httpmodul","https://github.com/manfredsteyer/angular","https://manfredsteyer.github.io/angular","https://steyer","id","id_token","ident","identityserv","ifram","implcit","implement","implicit","import","index","index.html","info","info.st","initi","initialnavig","initimplicitflow","instanc","instead","interact","interfac","isn't","issu","issuer'","java","job","jsrasign","jwk","jwksvalidationhandl","jwksvalidationhandler();in","keep","key","keycloak","kick","known","known/openid","later","leverag","lib","librari","life","line","load","local","localhost:[8080","localstorag","location.origin","locationstrategi","log","loggin","login","logoff","logout","main","make","manual","match","max/geheim","mean","mention","method","mind","modul","more","msec","name","navig","net","net/.net","new","ngmodul","note","null","nullvalidationhandl","oauth","oauth2","oauthmodul","oauthmodule.forroot","oauthservic","observ","offline_access","oidc","oidc/angular","oidc/doc","ok","on","ontokenreceiv","openid","option","otherparam","otherwis","out","output","over","overrid","owner","packag","page","paramet","parent.postmessage(location.hash","pars","pass","password","pathlocationstrategi","perform","permiss","pleas","preserv","prevent","profil","properti","provid","public","purpos","queri","quit","read","receiv","redhad","redhat'","redirect","redirecturi","refresh","refresh.html","refresh.html\";pleas","regard","regist","registerd","relax","relay","request","requirehttp","resourc","respond","result","return","root","rout","router","routermodule.forroot(app_rout","rule","run","runn","safe","sampl","scaffold","scope","second","secreat","secret","section","see","send","sens","server","server'","server.azurewebsites.net/ident","server.azurewebsites.net/identity/.wel","server.azurewebsites.net/identity/connect/author","server.azurewebsites.net/identity/connect/endsess","server.azurewebsites.net/identity/connect/token","server.azurewebsites.net/identity/connect/userinfo","servic","sessionstorag","set","setstorag","setup","short","show","side","sign","signatur","silent","silentrefresh","siletrefreshtimeout","similar","singl","skip","solut","somevalu","sourc","spa","spa'","spec","specif","standard","start","startup","state","still","storag","strictdiscoverydocumentvalid","subscribe(","succeed","success","successfulli","such","support","sure","task","templateurl","tenant","test","testen","that'","then(info","third","this.oauthservice.clientid","this.oauthservice.customqueryparam","this.oauthservice.dummyclientsecret","this.oauthservice.events.subscribe(","this.oauthservice.fetchtokenusingpasswordflow('max","this.oauthservice.fetchtokenusingpasswordflowandloaduserprofile('max","this.oauthservice.getaccesstoken","this.oauthservice.getidentityclaim","this.oauthservice.initimplicitflow","this.oauthservice.initimplicitflow('http://www.myurl.com/x/y/z');aft","this.oauthservice.issu","this.oauthservice.loaddiscoverydocument().then","this.oauthservice.loaddiscoverydocument(url).then","this.oauthservice.loaduserprofil","this.oauthservice.loginurl","this.oauthservice.logout","this.oauthservice.logouturl","this.oauthservice.redirecturi","this.oauthservice.refreshtoken().then","this.oauthservice.scop","this.oauthservice.setstorage(sessionstorag","this.oauthservice.silentrefresh","this.oauthservice.silentrefreshredirecturi","this.oauthservice.tokenendpoint","this.oauthservice.tokenvalidationhandl","this.oauthservice.trylogin","this.oauthservice.trylogin().then(_","this.oauthservice.userinfoendpoint","this.router.navig","three","time","timeout","timeoutfactor","timespan","togeht","token","token'","token(","token_expir","tokenvalid","transmit","tri","trigger","true","trylogin","ts","two","type","up","uri","url","us","usecas","usehash","user","user'","userinfo","username/password","username/passwort","valid","validationhandl","valu","var","version","via","voucher","want","warn","we'v","web","webpack","well","window.location.origin","within","without","zum"],"overview.html":["1","11","2","3","bootstrap","class","declar","depend","export","inject","interfac","legend","match","modul","out","overview","provid","reset","result","zoom"],"license.html":["2017","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","herebi","holder","impli","includ","kind","liabil","liabl","licens","limit","manfr","match","merchant","merg","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","sell","shall","softwar","start","steyer","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["brows","browser","match","modul","oauthmodul","result","support","svg"],"modules/OAuthModule.html":["angular/common","angular/cor","class","commonmodul","config","declar","export","file","forroot","handler","helper.servic","import","info","match","modul","modulewithprovid","ngmodul","oauth","oauthmodul","oauthservic","provid","result","return","rxjs/add/observable/of","rxjs/add/observable/rac","rxjs/add/operator/delay","rxjs/add/operator/do","rxjs/add/operator/filt","rxjs/add/operator/first","rxjs/add/operator/map","rxjs/add/operator/publish","rxjs/add/operator/topromis","servic","sourc","src/index.t","static","token","type","url","urlhelperservic","valid","validation/jwk","validation/nul","validation/valid"],"injectables/OAuthService.html":["0","0.75","1","10","1000","1970","2","20","4","60","75","_storag","abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789","access","access_token","accesstoken","accesstokentimeoutsubscript","accord","addit","additionalst","allow","angular","angular/cor","angular/http","anoth","api","append","application/x","arg","around","array","array.isarray(claims.aud","at_hash","audienc","auth","authconfig","authorization_endpoint","authorizationhead","avoid","b/c","b64decodeunicod","b64decodeunicode(claimsbase64","b64decodeunicode(headerbase64","base64","base64data","base64data.length","bearer","befor","boolean","both","brake","bring","browser'","calctimeout(expir","callontokenreceivedifexists(opt","case","catch(err","catch(error","catch(reason","check","claim","claims.aud","claims.aud.every(v","claims.aud.join","claims.exp","claims.iat","claims.iss","claims.nonc","claims.sub","claims['at_hash","claimsbase64","claimsjson","class","clear","clearaccesstokentim","clearhashafterlogin","clearidtokentim","client","client'","client_id","clientid","code","config","configur","configure(config","connect","consol","console.debug.apply(consol","console.error","console.error(\"error","console.error('error","console.error(err","console.error(error","console.error(reason","console.warn('no","console.warn(err","constructor","constructor(http","createandsavenonc","createloginurl","createnonc","current","custom","customhashfrag","customqueryparam","customredirecturi","date","date.now","debug","debug(...arg","decodeuricomponent(parts[\"st","default","defaultconfig","defin","delay(this.siletrefreshtimeout","delay(timeout","delta","demand","deprec","descript","dicoveri","discoveri","discoverydocumentload","discoverydocumentloadedsubject","disoveri","display","do","do(e","doc","doc.authorization_endpoint","doc.end_session_endpoint","doc.grant_types_support","doc.issu","doc.jwks_uri","doc.sub","doc.token_endpoint","doc.userinfo_endpoint","doc['issu","document","document.body.appendchild(ifram","document.body.removechild(existingifram","document.createelement('ifram","document.getelementbyid(this.silentrefreshiframenam","domain","don't","dummyclientsecret","dure","e","e.data","e.typ","encodeuricomponent(id_token","encodeuricomponent(loginhint","encodeuricomponent(nonc","encodeuricomponent(redirecturi","encodeuricomponent(scop","encodeuricomponent(st","encodeuricomponent(that.clientid","encodeuricomponent(that.resourc","encodeuricomponent(that.responsetyp","encodeuricomponent(this.customqueryparams[key","encodeuricomponent(this.postlogoutredirecturi","end_session_endpoint","endpoint","enum","err","error","error(\"can","error(\"createnonc","error('eith","error('loginurl","error('sil","error('tokenendpoint","error('userinfoendpoint","errors.length","errors.push('everi","errors.push('http","event","eventlisten","eventssubject","eventtyp","exchang","exist","existingclaim","existingclaims['sub","existingifram","expect","expectedprefix","expir","expiresat","expiresatmsec","expiresin","expiresinmillisecond","export","expos","fail","fals","far","fetchtokenusingpasswordflow","fetchtokenusingpasswordflow(usernam","fetchtokenusingpasswordflowandloaduserprofil","fetchtokenusingpasswordflowandloaduserprofile(usernam","file","filter(","find","flow","for(let","form","fragment","full","fullurl","getaccesstoken","getaccesstokenexpir","getidentityclaim","getidtoken","getidtokenexpir","getkeycount","good","granttypessupport","handleloginerror(opt","handler","happen","hash","hasvalidaccesstoken","hasvalididtoken","header","header.kid","headerbase64","headerjson","headers.set('author","headers.set('cont","helper","helper.servic","here","hidden","http","https://tools.ietf.org/html/rfc7517","httpscheck","iat","id","id_token","id_token_hint","idclaim","idtoken","idtoken.idtoken","idtoken.idtokenclaimsjson","idtoken.idtokenexpiresat","idtoken.split","idtokenclaim","idtokenclaimsjson","idtokenexpiresat","idtokenhead","idtokenheaderjson","idtokentimeoutsubscript","ifram","iframe.id","iframe.setattribute('src","iframe.style.vis","ignor","implement","implicit","import","index","infer","info","inform","initi","initimplicitflow","initimplicitflow(additionalst","inject","instanceof","instead","intern","invalid","issuedatmsec","issuer","issuer'","issuercheck","json","json.parse(claim","json.parse(claimsjson","json.parse(headerjson","json.stringify(doc","jwk","jwks_uri","jwksuri","key","kid","known/openid","lcurl","lcurl.match(/^http:\\/\\/localhost","lcurl.startswith('http","life","list","load","loaddiscoverydocu","loaddiscoverydocument(fullurl","loaddiscoverydocumentandtrylogin","loadjwk","loaduserprofil","locat","location.hash","location.href","log","login","login_hint","loginhint","loginhint).then(funct","loginopt","loginurl","logout","logout(noredirecttologouturl","logouturl","make","manual","map","map(","map(r","match","messag","messageev","method","millisecond","multipl","name","need","new","nonc","nonceinst","noredirecttologouturl","now","now.gettim","null","nullvalidationhandl","number","oauth","oauth2","oautherrorev","oautherrorevent('discovery_document_load_error","oautherrorevent('discovery_document_validation_error","oautherrorevent('invalid_nonce_in_st","oautherrorevent('jwks_load_error","oautherrorevent('silent_refresh_error","oautherrorevent('silent_refresh_timeout","oautherrorevent('token_error","oautherrorevent('token_refresh_error","oautherrorevent('token_validation_error","oautherrorevent('user_profile_load_error","oautherrorevent).first","oauthev","oauthinfoev","oauthinfoevent('token_expir","oauthservic","oauthstorag","oauthsuccessev","oauthsuccessevent('discovery_document_load","oauthsuccessevent('silently_refresh","oauthsuccessevent('token_receiv","oauthsuccessevent('token_refresh","oauthsuccessevent('user_profile_load","object","object.assign","object.assign(thi","object.getownpropertynames(this.customqueryparam","observ","observable.of(new","of(new","oidc","oidc.\\n","onloginerror","ontokenreceiv","openid","oper","optin","option","options.customhashfrag","options.disableoauth2statecheck","options.onloginerror","options.onloginerror(part","options.ontokenreceiv","options.ontokenreceived(tokenparam","options.validationhandl","order","otherwis","out","padbase64(base64data","param","paramet","pars","parsedidtoken","parseint(expiresat","parseint(this._storage.getitem(\"expires_at","parseint(this._storage.getitem(\"id_token_expires_at","part","parts[\"access_token","parts[\"error","parts[\"id_token","parts['expires_in","pass","password","passwort","perform","platform","plattform","possibl","post_logout_redirect_uri","postlogoutredirecturi","prefixedmessag","prefixedmessage.startswith(expectedprefix","prefixedmessage.substr(expectedprefix.length","privat","processidtoken","processidtoken(idtoken","profil","promis","promise((resolv","promise.reject('eith","promise.reject(err","promise.reject(ev","promise.resolv","promise.resolve(nul","properti","protect","provid","public","queri","question","r.json()).subscrib","race([error","rais","reason","receiv","receivedfirsttoken","redirect","redirect_uri","redirecturi","redirecturi).then(url","refresh","refresh_token","refreshtoken","regist","reject","reject('discovery_document_validation_error","reject('loginurl","reject(err","remoteonli","remov","removesilentrefresheventlisten","request","requestaccesstoken","requir","requirehttp","resolve(doc","resolve(jwk","resolve(nul","resolve(result","resolve(tokenrespons","resourc","response_typ","responsetyp","result","result.idtoken","result.idtokenclaim","return","rng","rngurl","rxjs/observ","rxjs/subject","rxjs/subscript","savednonc","scope","scope.match(/(^|\\s)openid($|\\","search","search.set('client_id","search.set('client_secret","search.set('grant_typ","search.set('password","search.set('refresh_token","search.set('scop","search.set('usernam","search.tostr","second","secreat","secur","see","seperationchar","server","server'","servic","service.t","service.ts:1058","service.ts:1074","service.ts:1185","service.ts:1194","service.ts:1208","service.ts:1216","service.ts:1224","service.ts:1231","service.ts:1249","service.ts:1268","service.ts:1278","service.ts:1312","service.ts:1320","service.ts:187","service.ts:242","service.ts:267","service.ts:296","service.ts:300","service.ts:309","service.ts:442","service.ts:455","service.ts:589","service.ts:602","service.ts:647","service.ts:692","service.ts:776","service.ts:913","service.ts:93","service.ts:966","sessionstorag","set","setstorag","setstorage(storag","setupaccesstokentim","setupautomaticsiletrefresh","setupidtokentim","setupsilentrefresheventlisten","setuptim","showdebuginform","shown","side","sign","signatur","silent","silent_refresh_timeout","silently_refreshed').first","silentrefresh","silentrefreshiframenam","silentrefreshmessageprefix","silentrefreshpostmessageeventlisten","silentrefreshredirecturi","silentrefreshshowifram","siletrefreshtimeout","solut","sourc","spec","src/oauth","standard","start","state","state.split","state/nonc","statepart","stateparts.length","stateparts[0","stateparts[1","still","storag","store","storeaccesstokenresponse(accesstoken","storeidtoken","storeidtoken(idtoken","strictdiscoverydocumentvalid","stricter","string","sub","subject","subscribe(","subscript","success","support","sure","take","taken","tenminutesinmsec","text","that._storage.setitem(\"nonc","that.getaccesstoken","that.getidentityclaim","that.getidtoken","that.loginurl","that.loginurl.indexof","that.oidc","that.resourc","that.scop","that.stat","then(_","then(result","therefor","this._storag","this._storage.getitem(\"access_token","this._storage.getitem(\"expires_at","this._storage.getitem(\"id_token","this._storage.getitem(\"id_token_claims_obj","this._storage.getitem(\"nonc","this._storage.getitem('refresh_token","this._storage.setitem(\"access_token","this._storage.setitem(\"expires_at","this._storage.setitem(\"id_token","this._storage.setitem(\"id_token_claims_obj","this._storage.setitem(\"id_token_expires_at","this._storage.setitem(\"refresh_token","this._storage.setitem('id_token_claims_obj","this.accesstokentimeoutsubscript","this.accesstokentimeoutsubscription.unsubscrib","this.calctimeout(expir","this.callontokenreceivedifexists(opt","this.checkathash(validationparam","this.checksignature(validationparams).then(_","this.clearaccesstokentim","this.clearhashafterlogin","this.clearidtokentim","this.clientid","this.createandsavenonce().then((nonc","this.createloginurl(additionalst","this.createloginurl(nul","this.createnonce().then(funct","this.customqueryparam","this.debug('error","this.debug('refresh","this.debug('tim","this.debug('tokenrespons","this.debug('userinfo","this.discoverydocumentload","this.discoverydocumentloadedsubject.asobserv","this.discoverydocumentloadedsubject.next(doc","this.dummyclientsecret","this.ev","this.events.filter(","this.eventssubject.asobserv","this.eventssubject.next(","this.eventssubject.next(err","this.eventssubject.next(ev","this.eventssubject.next(new","this.eventssubject.next(result","this.getaccesstoken","this.getaccesstokenexpir","this.getidentityclaim","this.getkeycount","this.granttypessupport","this.handleloginerror(opt","this.hasvalidaccesstoken","this.hasvalididtoken","this.http.get(fullurl).map(r","this.http.get(this.jwksuri).map(r","this.http.get(this.userinfoendpoint","this.http.post(this.tokenendpoint","this.idtokentimeoutsubscript","this.idtokentimeoutsubscription.unsubscrib","this.issu","this.jwk","this.jwks['key","this.jwks['keys'].length","this.jwksuri","this.loaddiscoverydocument().then((doc","this.loadjwk","this.loadjwks().then(_","this.loaduserprofil","this.loginurl","this.logouturl","this.logouturl.replace(/\\{\\{id_token","this.oidc","this.padbase64(tokenparts[0","this.padbase64(tokenparts[1","this.redirecturi","this.removesilentrefresheventlisten","this.requestaccesstoken","this.requirehttp","this.responsetyp","this.rngurl","this.scop","this.setstorage(sessionstorag","this.setstorage(storag","this.setupaccesstokentim","this.setupidtokentim","this.setupsilentrefresheventlisten","this.setuptim","this.showdebuginform","this.silentrefresh","this.silentrefreshiframenam","this.silentrefreshmessageprefix","this.silentrefreshpostmessageeventlisten","this.silentrefreshredirecturi","this.silentrefreshshowifram","this.stat","this.storeaccesstokenresponse(accesstoken","this.storeaccesstokenresponse(tokenresponse.access_token","this.storeidtoken(result","this.strictdiscoverydocumentvalid","this.timeoutfactor","this.tokenendpoint","this.tokenvalidationhandl","this.tokenvalidationhandler.validatesignature(param","this.trylogin","this.urlhelper.gethashfragmentparam","this.urlhelper.gethashfragmentparams(options.customhashfrag","this.userinfoendpoint","this.validatediscoverydocument(doc","this.validatenonceforaccesstoken(accesstoken","this.validateurlagainstissuer(url","this.validateurlforhttps(fullurl","this.validateurlforhttps(this.loginurl","this.validateurlforhttps(this.tokenendpoint","this.validateurlforhttps(this.userinfoendpoint","this.validateurlforhttps(url","this.validateurlfromdiscoverydocument(doc['authorization_endpoint","this.validateurlfromdiscoverydocument(doc['end_session_endpoint","this.validateurlfromdiscoverydocument(doc['jwks_uri","this.validateurlfromdiscoverydocument(doc['token_endpoint","this.validateurlfromdiscoverydocument(doc['userinfo_endpoint","throw","time","timeout","timeoutfactor","token","token'","token_endpoint","token_expir","token_receiv","token_received').subscribe(_","token_timeout","tokenendpoint","tokenparam","tokenpart","tokenrespons","tokenresponse.expires_in","tokenresponse.refresh_token","tokenvalidationhandl","topromis","transmit","tri","trigger","true","trylogin","trylogin(opt","type","typeof","undefin","uri","url","url.tolowercas","url.tolowercase().startswith(this.issuer.tolowercas","urlencod","urlhelp","urlhelperservic","urlsearchparam","us","user","userinfo","userinfo_endpoint","userinfoendpoint","usernam","v","valid","validatediscoverydocument(doc","validatenonceforaccesstoken(accesstoken","validateurlagainstissuer(url","validateurlforhttps(url","validateurlfromdiscoverydocument(url","validation/nul","validation/valid","validationhandl","validationparam","valu","var","via","void","w/o","web","well","whether","window","window.addeventlistener('messag","window.removeeventlistener('messag","without","work","wrong","www"],"injectables/UrlHelperService.html":["0","1","angular/cor","class","customhashfrag","data","decodeuricomponent(hash","defin","escapedkey","escapedvalu","export","file","gethashfragmentparam","gethashfragmentparams(customhashfrag","hash","hash.indexof","hash.substr(1","hash.substr(questionmarkposition+1","helper.service.t","helper.service.ts:29","helper.service.ts:6","import","index","info","inject","key","match","method","null","object","pair","parsequerystr","parsequerystring(querystr","public","querystr","querystring.split","questionmarkposit","result","return","separatorindex","sourc","src/url","string","this.parsequerystring(hash","urlhelperservic","valu","var","window.location.hash"],"classes/AbstractValidationHandler.html":["2","9]{3","_\").replace(/=/g","abstract","abstractvalidationhandl","access_token","accesstoken","against","alg","alg.match(/^.s[0","alg.substr(2","algorithm","alreadi","asstr","at_hash","athash","boolean","btoa(leftmosthalf","calchash","calchash(valuetohash","calcul","claimsathash","class","console.error(\"actu","console.error(\"exptect","defin","descript","error('algorithm","export","field","file","handler","handler.t","handler.ts:37","handler.ts:42","handler.ts:70","handler.ts:87","hash","hashalg","header","hook","id_token","id_token'","idtoken","idtokenclaim","idtokenhead","implement","index","infer","inferhashalgorithm","inferhashalgorithm(jwthead","info","interfac","jwk","jwtheader","jwtheader['alg","leftmosthalf","loadkey","make","match","method","name","new","object","overrid","param","paramet","params.idtokenclaims['at_hash'].replace(/=/g","pars","pass","promis","protect","public","receiv","replace(/\\//g","result","return","sha","sha256(accesstoken","signatur","sourc","src/token","string","support","this.calchash(params.accesstoken","this.inferhashalgorithm(params.idtokenhead","throw","token","tokenhash","tokenhash.length","tokenhash.substr(0","tokenhashbase64","tokenhashbase64.replace(/\\+/g","true","type","us","valid","validateathash","validateathash(param","validateathash(validationparam","validatesignatur","validatesignature(validationparam","validation/valid","validationhandl","validationparam","valu","valuetohash","var"],"classes/JwksValidationHandler.html":["0","1","600","abstractvalidationhandl","against","alg","alg2kty(alg","algorithm","allow","allowedalgorithm","array.isarray(params.jwks['key","boolean","bytearrayasstr","calchash","calchash(valuetohash","case","class","console.debug('validatesignatur","console.error(error","current","declar","default","defin","descript","differ","discoveri","document","e","ec","error","error('array","error('cannot","error('paramet","es256","es384","expect","export","extend","fals","file","for(let","found","graceperiod","graceperiodinsec","handler","handler.t","handler.ts:107","handler.ts:114","handler.ts:17","handler.ts:23","handler.ts:25","hashalg","hashalg.digeststring(valuetohash","header","hs256","hs384","hs512","i=0","id","id_token","idtoken","idtokenhandl","import","index","infer","info","isvalid","json","jwk","jwksvalidationhandl","k['kid","k['kti","k['use","key","keyobj","keys.filter(k","keys.find(k","kid","kti","load","loadkey","match","matchingkey","matchingkeys.length","matchingkeys[0","method","miss","more","new","number","object","on","param","params.idtoken","params.idtokenhead","params.idtokenheader['alg","params.idtokenheader['kid","params.jwk","params.jwks['key","params.jwks['keys'].length","params.loadkey","period","pleas","privat","promis","promise.reject('signatur","promise.reject(error","promise.resolv","properti","provid","ps256","ps384","ps512","r","requir","require('jsrsasign","result","retri","return","rs","rs.keyutil.getkey(key","rs.kjur.crypto.messagedigest({alg","rs.kjur.jws.jws.verifyjwt(params.idtoken","rs256","rs384","rs512","rsa","second","set","sig","signatur","sourc","specifi","src/token","string","switch(alg.charat(0","then(_","then(key","this.alg2kty(alg","this.allowedalgorithm","this.graceperiodinsec","this.tobytearrayasstring(result","this.validatesignature(param","throw","time","timestamp","tobytearrayasstr","tobytearrayasstring(hexstr","true","type","valid","validatesignatur","validatesignature(param","validation/jwk","validationhandl","validationparam","valu","var","web"],"classes/LoginOptions.html":["abstract","accesstoken","actual","addit","attack","auth","avoid","best","boolean","call","check","claim","class","client","compat","creat","custom","customhashfrag","data","defin","deprec","descript","detect","disabl","disableoauth2statecheck","do","error","event","export","file","fragment","function","getitem(key","hash","hook","id","id_token","idclaim","idtoken","idtokenclaim","idtokenclaimsjson","idtokenexpiresat","idtokenhead","idtokenheaderjson","ifram","implement","includ","index","info","instead","interfac","localstorag","loginopt","match","messag","method","nonc","null","number","oauth2","oauthservic","oauthstorag","object","oidc","on","onloginerror","ontokenreceiv","option","param","pars","parsedidtoken","pass","passt","practic","promis","properti","receiv","receivedtoken","refresh","removeitem(key","repres","result","secur","server","sessionstorag","set","setitem(key","side","silent","simpl","sourc","src/types.t","src/types.ts:12","src/types.ts:18","src/types.ts:26","src/types.ts:33","src/types.ts:43","state","storag","store","string","successfulli","token","tokenvalidationhandl","true","trylogin","type","us","valid","validationhandl","void"],"classes/NullValidationHandler.html":["abstractvalidationhandl","boolean","class","defin","descript","export","file","handler","handler.t","handler.ts:11","handler.ts:8","implement","import","index","info","isn't","match","method","noth","nullvalidationhandl","promis","promise.resolve(nul","result","return","risk","skip","sourc","src/token","true","us","valid","validateathash","validateathash(validationparam","validatesignatur","validatesignature(validationparam","validation/nul","validationhandl","validationparam"],"classes/OAuthErrorEvent.html":["abstract","class","constructor","constructor(typ","defin","discovery_document_load","discovery_document_load_error","discovery_document_validation_error","eventtyp","export","extend","file","info","invalid_nonce_in_st","jwks_load_error","match","null","oautherrorev","oauthev","oauthinfoev","oauthsuccessev","object","param","readonli","reason","received_first_token","result","silent_refresh_error","silent_refresh_timeout","silently_refresh","sourc","src/events.t","src/events.ts:39","super(typ","token_error","token_expir","token_receiv","token_refresh","token_refresh_error","token_validation_error","type","user_profile_load","user_profile_load_error"],"classes/OAuthEvent.html":["abstract","class","constructor","constructor(typ","defin","discovery_document_load","discovery_document_load_error","discovery_document_validation_error","eventtyp","export","extend","file","info","invalid_nonce_in_st","jwks_load_error","match","null","oautherrorev","oauthev","oauthinfoev","oauthsuccessev","object","param","readonli","reason","received_first_token","result","silent_refresh_error","silent_refresh_timeout","silently_refresh","sourc","src/events.t","src/events.ts:21","super(typ","token_error","token_expir","token_receiv","token_refresh","token_refresh_error","token_validation_error","type","user_profile_load","user_profile_load_error"],"classes/OAuthInfoEvent.html":["abstract","class","constructor","constructor(typ","defin","discovery_document_load","discovery_document_load_error","discovery_document_validation_error","eventtyp","export","extend","file","info","invalid_nonce_in_st","jwks_load_error","match","null","oautherrorev","oauthev","oauthinfoev","oauthsuccessev","object","param","readonli","reason","received_first_token","result","silent_refresh_error","silent_refresh_timeout","silently_refresh","sourc","src/events.t","src/events.ts:30","super(typ","token_error","token_expir","token_receiv","token_refresh","token_refresh_error","token_validation_error","type","user_profile_load","user_profile_load_error"],"classes/OAuthStorage.html":["abstract","accesstoken","actual","attack","auth","avoid","best","boolean","call","check","claim","class","client","compat","creat","custom","customhashfrag","data","defin","deprec","descript","detect","disabl","disableoauth2statecheck","do","error","event","export","file","fragment","getitem","getitem(key","hash","hook","id","id_token","idclaim","idtoken","idtokenclaim","idtokenclaimsjson","idtokenexpiresat","idtokenhead","idtokenheaderjson","ifram","implement","includ","index","info","instead","interfac","localstorag","loginopt","match","messag","method","nonc","null","number","oauth2","oauthservic","oauthstorag","object","oidc","on","onloginerror","ontokenreceiv","param","pars","parsedidtoken","pass","practic","promis","properti","receiv","receivedtoken","refresh","removeitem","removeitem(key","repres","result","return","secur","server","sessionstorag","set","setitem","setitem(key","side","silent","simpl","sourc","src/types.t","src/types.ts:53","src/types.ts:54","src/types.ts:55","state","storag","store","string","successfulli","token","tokenvalidationhandl","true","trylogin","us","valid","validationhandl","void"],"classes/OAuthSuccessEvent.html":["abstract","class","constructor","discovery_document_load","discovery_document_load_error","discovery_document_validation_error","eventtyp","export","extend","file","info","invalid_nonce_in_st","jwks_load_error","match","null","oautherrorev","oauthev","oauthinfoev","oauthsuccessev","object","param","readonli","reason","received_first_token","result","silent_refresh_error","silent_refresh_timeout","silently_refresh","sourc","src/events.t","super(typ","token_error","token_expir","token_receiv","token_refresh","token_refresh_error","token_validation_error","type","user_profile_load","user_profile_load_error"],"classes/ReceivedTokens.html":["abstract","accesstoken","actual","attack","auth","avoid","best","boolean","call","check","claim","class","client","compat","creat","custom","customhashfrag","data","defin","deprec","descript","detect","disabl","disableoauth2statecheck","do","error","event","export","file","fragment","getitem(key","hash","hook","id","id_token","idclaim","idtoken","idtokenclaim","idtokenclaimsjson","idtokenexpiresat","idtokenhead","idtokenheaderjson","ifram","implement","includ","index","info","instead","interfac","localstorag","loginopt","match","messag","method","nonc","null","number","oauth2","oauthservic","oauthstorag","object","oidc","on","onloginerror","ontokenreceiv","param","pars","parsedidtoken","pass","practic","promis","properti","receiv","receivedtoken","refresh","removeitem(key","repres","result","secur","server","sessionstorag","set","setitem(key","side","silent","simpl","sourc","src/types.t","src/types.ts:63","src/types.ts:64","src/types.ts:65","src/types.ts:66","state","storag","store","string","successfulli","token","tokenvalidationhandl","true","trylogin","type","us","valid","validationhandl","void"],"classes/ValidationHandler.html":["2","9]{3","_\").replace(/=/g","abstract","abstractvalidationhandl","access_token","accesstoken","against","alg","alg.match(/^.s[0","alg.substr(2","algorithm","alreadi","asstr","at_hash","athash","boolean","btoa(leftmosthalf","calchash","calchash(valuetohash","calcul","claimsathash","class","console.error(\"actu","console.error(\"exptect","defin","descript","error('algorithm","export","field","file","handler","handler.t","handler.ts:19","handler.ts:24","hash","hashalg","header","hook","id_token","id_token'","idtoken","idtokenclaim","idtokenhead","implement","index","infer","inferhashalgorithm(jwthead","info","interfac","jwk","jwtheader","jwtheader['alg","leftmosthalf","loadkey","make","match","method","name","new","object","overrid","param","params.idtokenclaims['at_hash'].replace(/=/g","pars","pass","promis","protect","public","receiv","replace(/\\//g","result","return","sha","sha256(accesstoken","signatur","sourc","src/token","string","support","this.calchash(params.accesstoken","this.inferhashalgorithm(params.idtokenhead","throw","token","tokenhash","tokenhash.length","tokenhash.substr(0","tokenhashbase64","tokenhashbase64.replace(/\\+/g","true","us","valid","validateathash","validateathash(param","validateathash(validationparam","validatesignatur","validatesignature(validationparam","validation/valid","validationhandl","validationparam","valu","valuetohash","var"],"interfaces/AuthConfig.html":["0.75","1000","2","20","75","access","addit","allow","angular","append","auth","authconfig","boolean","bring","case","clear","clearhashafterlogin","client","client'","clientid","connect","consol","const","customqueryparam","debug","default","defaultconfig","defin","demand","discoveri","disoveri","display","do","document","domain","don't","dummyclientsecret","dure","endpoint","event","export","expos","fals","file","flow","fragment","good","hash","here","http","https://tools.ietf.org/html/rfc7517","id","id_token","ifram","implicit","index","info","inform","initi","interfac","issuer","issuer'","json","jwk","key","life","locat","log","loginurl","logout","logouturl","manual","map","match","need","number","oauth","object","oidc","openid","option","out","paramet","password","passwort","postlogoutredirecturi","profil","properti","provid","public","queri","rais","receiv","redirect","redirecturi","refresh","regist","remoteonli","request","requestaccesstoken","requir","requirehttp","result","scope","second","secreat","secur","server","server'","set","showdebuginform","shown","silent","silentrefreshiframenam","silentrefreshmessageprefix","silentrefreshredirecturi","silentrefreshshowifram","siletrefreshtimeout","sourc","src/config.t","src/auth.config.ts:100","src/auth.config.ts:108","src/auth.config.ts:114","src/auth.config.ts:12","src/auth.config.ts:121","src/auth.config.ts:127","src/auth.config.ts:129","src/auth.config.ts:136","src/auth.config.ts:18","src/auth.config.ts:24","src/auth.config.ts:29","src/auth.config.ts:35","src/auth.config.ts:41","src/auth.config.ts:46","src/auth.config.ts:51","src/auth.config.ts:56","src/auth.config.ts:61","src/auth.config.ts:66","src/auth.config.ts:7","src/auth.config.ts:72","src/auth.config.ts:77","src/auth.config.ts:79","src/auth.config.ts:85","src/auth.config.ts:90","standard","start","strictdiscoverydocumentvalid","string","taken","therefor","time","timeout","timeoutfactor","token","token'","token_timeout","tokenendpoint","trigger","true","type","uri","url","us","user","userinfo","userinfoendpoint","valid","valu","w/o","web","whether"],"interfaces/ParsedIdToken.html":["abstract","accesstoken","actual","attack","auth","avoid","best","boolean","call","check","claim","class","client","compat","creat","custom","customhashfrag","data","defin","deprec","descript","detect","disabl","disableoauth2statecheck","do","error","event","export","file","fragment","getitem(key","hash","hook","id","id_token","idclaim","idtoken","idtokenclaim","idtokenclaimsjson","idtokenexpiresat","idtokenhead","idtokenheaderjson","ifram","implement","includ","index","info","instead","interfac","localstorag","loginopt","match","messag","method","nonc","null","number","oauth2","oauthservic","oauthstorag","object","oidc","on","onloginerror","ontokenreceiv","param","pars","parsedidtoken","pass","practic","promis","properti","receiv","receivedtoken","refresh","removeitem(key","repres","result","secur","server","sessionstorag","set","setitem(key","side","silent","simpl","sourc","src/types.t","src/types.ts:73","src/types.ts:74","src/types.ts:75","src/types.ts:76","src/types.ts:77","src/types.ts:78","state","storag","store","string","successfulli","token","tokenvalidationhandl","true","trylogin","type","us","valid","validationhandl","void"],"interfaces/ValidationParams.html":["2","9]{3","_\").replace(/=/g","abstract","abstractvalidationhandl","access_token","accesstoken","against","alg","alg.match(/^.s[0","alg.substr(2","algorithm","alreadi","asstr","at_hash","athash","boolean","btoa(leftmosthalf","calchash","calchash(valuetohash","calcul","claimsathash","class","console.error(\"actu","console.error(\"exptect","defin","error('algorithm","export","field","file","function","handler","handler.t","handler.ts:2","handler.ts:3","handler.ts:4","handler.ts:5","handler.ts:6","handler.ts:7","hash","hashalg","header","hook","id_token","id_token'","idtoken","idtokenclaim","idtokenhead","implement","index","infer","inferhashalgorithm(jwthead","info","interfac","jwk","jwtheader","jwtheader['alg","leftmosthalf","loadkey","make","match","method","name","new","object","overrid","param","params.idtokenclaims['at_hash'].replace(/=/g","pars","pass","promis","properti","protect","public","receiv","replace(/\\//g","result","return","sha","sha256(accesstoken","signatur","sourc","src/token","string","support","this.calchash(params.accesstoken","this.inferhashalgorithm(params.idtokenhead","throw","token","tokenhash","tokenhash.length","tokenhash.substr(0","tokenhashbase64","tokenhashbase64.replace(/\\+/g","true","type","us","valid","validateathash","validateathash(param","validateathash(validationparam","validatesignature(validationparam","validation/valid","validationhandl","validationparam","valu","valuetohash","var"],"miscellaneous/functions.html":["b64decodeunicod","b64decodeunicode(str","function","helper.t","match","miscellan","result","src/base64","undefin"],"miscellaneous/variables.html":["authconfig","defaultconfig","handler.t","match","miscellan","requir","result","rs","src/config.t","src/token","type","valid","validation/jwk","variabl"],"miscellaneous/typealiases.html":["alias","eventtyp","match","miscellan","result","src/events.t","type","typealias"]},"length":24},"tokenStore":{"root":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}},".":{"3":{"3":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"docs":{}},"5":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"7":{"5":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.004477611940298508}}},"docs":{}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"1":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664}}},"9":{"7":{"0":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}},"docs":{}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}},"2":{"0":{"1":{"7":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}},".":{"0":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664}}},"4":{"2":{"0":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"]":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}},"docs":{}},"docs":{}},"7":{"1":{"1":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"docs":{}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"6":{"0":{"0":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}},"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"7":{"5":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}},"docs":{}},"8":{"0":{"8":{"9":{"docs":{},"|":{"4":{"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"9":{"docs":{},"]":{"docs":{},"{":{"3":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"docs":{}}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005471956224350205},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.018433179723502304},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}},"d":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015}},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}},"g":{"2":{"docs":{},"k":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}},"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.014184397163120567},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.012396694214876033}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"/":{"docs":{},"^":{"docs":{},".":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"docs":{}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"2":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"docs":{}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.028368794326241134},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.014084507042253521},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.01809954751131222},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.1}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"docs":{"index.html":{"ref":"index.html","tf":0.0062063615205585725},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0062063615205585725}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"x":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}},"t":{"docs":{},"r":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.01773049645390071},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.02262443438914027},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.01773049645390071},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.02262443438914027},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.02066115702479339}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.012412723041117145},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.014925373134328358},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"license.html":{"ref":"license.html","tf":0.010526315789473684}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":5.004477611940299},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09523809523809523}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}}}}}}},"d":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.009575923392612859},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"h":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"l":{"docs":{},"m":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"q":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"v":{"docs":{},"w":{"docs":{},"x":{"docs":{},"y":{"docs":{},"z":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"h":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"l":{"docs":{},"m":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"q":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"v":{"docs":{},"w":{"docs":{},"x":{"docs":{},"y":{"docs":{},"z":{"0":{"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.028368794326241134},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.018604651162790697},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.018433179723502304},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.03167420814479638},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.028925619834710745}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":5.00709219858156},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"6":{"4":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"s":{"docs":{},"e":{"6":{"4":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"s":{"docs":{},"t":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"overview.html":{"ref":"overview.html","tf":0.041666666666666664}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005129958960328317},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.010273972602739725},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.03134328358208955},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"modules.html":{"ref":"modules.html","tf":0.1}},"'":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.009575923392612859}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"/":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}}}}}}}}}}},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0069821567106283944},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.014184397163120567},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.004103967168262654},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005430566330488751},"license.html":{"ref":"license.html","tf":0.010526315789473684},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}},"s":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.014184397163120567},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.01809954751131222},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005430566330488751},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":5.01063829787234},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":5.005633802816901},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":5.013698630136986},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":5.025},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":5.060975609756097},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":5.065789473684211},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":5.063291139240507},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":5.018604651162791},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":5.068493150684931},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":5.018433179723503},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":5.013574660633484},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01008533747090768},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}},"'":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.009575923392612859}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005430566330488751}}}},"a":{"docs":{},"t":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.009309542280837859},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.013337893296853625}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"license.html":{"ref":"license.html","tf":0.010526315789473684},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"'":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.003761969904240766}}}}}}}},"\"":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"x":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"o":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904}}}}}}}}}}}}}},"t":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.04878048780487805},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.05263157894736842},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.05063291139240506},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0410958904109589}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"license.html":{"ref":"license.html","tf":0.042105263157894736}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.031578947368421054}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"a":{"docs":{},"t":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}},"e":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.011940298507462687}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09523809523809523}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0140218878248974},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.014184397163120567},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.014084507042253521},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0273972602739726},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.027906976744186046},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.027649769585253458},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0626865671641791},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.03508771929824561},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.024793388429752067}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.02054794520547945},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.013824884792626729},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.021052631578947368}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"e":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}}}}},"docs":{}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.008533747090768037},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.004445964432284542},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}}},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}},"o":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009309542280837859},"license.html":{"ref":"license.html","tf":0.010526315789473684},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005129958960328317},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{},"s":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}},"(":{"docs":{},"e":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015}}}}},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"r":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010259917920656635}},")":{"docs":{},")":{"docs":{},";":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0047879616963064295},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"'":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0069821567106283944},"license.html":{"ref":"license.html","tf":0.010526315789473684},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005129958960328317},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.06097560975609756},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.06578947368421052},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.06329113924050633},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0547945205479452},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.2}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904}},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005430566330488751},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.10714285714285714},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.06097560975609756},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.06578947368421052},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.06329113924050633},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.018604651162790697},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0684931506849315},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.018433179723502304},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.012396694214876033}}}},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.014084507042253521}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010259917920656635}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.04878048780487805},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.039473684210526314},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.05063291139240506},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0547945205479452}}}}}}},"s":{"2":{"5":{"6":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"3":{"8":{"4":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}}}}}}}}}}},"c":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}}}},"l":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005129958960328317},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"e":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"license.html":{"ref":"license.html","tf":0.010526315789473684},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}},"n":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.018619084561675717},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.014925373134328358}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.02054794520547945},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.013824884792626729},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105}}}}}}}},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}},"u":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"l":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.02054794520547945},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":6.757575757575757}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.334109128523403},"license.html":{"ref":"license.html","tf":3.333333333333333}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"l":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.046511627906976744},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.02127659574468085},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.02054794520547945},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.013824884792626729},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.012396694214876033}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"1":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}},"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.03571428571428571},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0375},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},".":{"docs":{},"t":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.047619047619047616}},"s":{"docs":{},":":{"1":{"0":{"7":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"1":{"4":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125}}},"7":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"9":{"docs":{"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055}}},"docs":{}},"2":{"3":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"4":{"docs":{"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055}}},"5":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"3":{"7":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418}}},"docs":{"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"4":{"2":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418}}},"docs":{"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"5":{"docs":{"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"6":{"docs":{"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"7":{"0":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418}}},"docs":{"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"8":{"7":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418}}},"docs":{"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125}}},"docs":{}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010601915184678522},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},".":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}},"s":{"docs":{},":":{"2":{"9":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}},"docs":{}},"6":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}},"docs":{}}}}}}}}}}}},"t":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}}}},"o":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005813953488372093},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"/":{"docs":{},"#":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"/":{"docs":{},"r":{"docs":{},"f":{"docs":{},"c":{"7":{"5":{"1":{"7":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}},"s":{"2":{"5":{"6":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"3":{"8":{"4":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"docs":{}}},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005430566330488751},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005129958960328317},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.028368794326241134},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.03167420814479638},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.02066115702479339}},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"'":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0062063615205585725}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.018433179723502304},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.02304147465437788},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.021929824561403508},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}},"s":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}},"e":{"docs":{},"r":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.004477611940298508},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.02127659574468085},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.012396694214876033}}}}}}},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.009309542280837859},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005471956224350205},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.011940298507462687}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.16666666666666666},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.004103967168262654},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.024390243902439025},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.02631578947368421},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.0379746835443038},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0273972602739726},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"r":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"e":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835}},"(":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010259917920656635},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0273972602739726},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.018604651162790697},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.018433179723502304},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":5.002985074626865},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":5.008771929824562},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":5.012396694214876}}}}},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010259917920656635}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":5.001025991792066},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":5.034883720930233}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.031578947368421054},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025}}}}},"s":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"e":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}}},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}},"=":{"0":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}},"o":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"s":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"s":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.01971830985915493},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":5.005633802816901}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.05070422535211268},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"k":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"k":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"n":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.022535211267605635}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}},"t":{"docs":{},"i":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}},"t":{"docs":{},"i":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664}}}}}},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}},"i":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007757951900698216}}}}}}},"f":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}},"n":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":3.333333333333333}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.021052631578947368}}}}},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.01652892561983471}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},"[":{"8":{"0":{"8":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.004445964432284542},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.011636927851047323},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":5.006849315068493},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"/":{"docs":{},"^":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}},"n":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"f":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"license.html":{"ref":"license.html","tf":0.021052631578947368},"modules.html":{"ref":"modules.html","tf":0.2},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.014084507042253521},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.024390243902439025},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.02631578947368421},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.02531645569620253},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0273972602739726},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.18181818181818182},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09523809523809523},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.2}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112}}}}}}}}},"[":{"0":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}}}}}}}}}}}},"x":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}}}},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"(":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.012995896032831737},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.02127659574468085},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.01809954751131222},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":3.424242424242424},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":3.3809523809523805},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":3.433333333333333}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"modules.html":{"ref":"modules.html","tf":10.1},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":5.011904761904762}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.014184397163120567},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}}}}},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"/":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010259917920656635},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.016901408450704224},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"e":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.03571428571428571}}}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.021052631578947368}}}},"h":{"docs":{"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}}}},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.024390243902439025},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.02631578947368421},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.02531645569620253},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0273972602739726},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":5.025}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105}}}}}}}},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}},"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.004477611940298508}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"modules.html":{"ref":"modules.html","tf":0.1},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":5.035714285714286}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.010861132660977503},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":5.0006839945280435},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.02054794520547945},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.013824884792626729},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":5.0093023255813955},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":5.027397260273973}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":5.024390243902439},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{},"s":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.06097560975609756},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":5.065789473684211},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.06329113924050633},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0684931506849315}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":5.025316455696203},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.046511627906976744},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.01773049645390071},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.04878048780487805},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.02631578947368421},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.02531645569620253},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.018604651162790697},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0273972602739726},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.027649769585253458},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.01809954751131222},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.03508771929824561},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.04132231404958678}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.010861132660977503},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.004445964432284542},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},".":{"docs":{},"\\":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010447761194029851}}}}},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005813953488372093},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"license.html":{"ref":"license.html","tf":0.010526315789473684},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"license.html":{"ref":"license.html","tf":0.010526315789473684},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.041666666666666}}}}}}}}},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005471956224350205},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.024390243902439025},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.012396694214876033}},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.003761969904240766},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"'":{"docs":{},"]":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"=":{"docs":{},"/":{"docs":{},"g":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}},"s":{"docs":{},"'":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.013824884792626729},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":5.008771929824562}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}}},"s":{"docs":{},"[":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"'":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.014184397163120567},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01008533747090768},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.009917920656634747},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015}}},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}},"t":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575}}}}},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}}}}},"i":{"docs":{},"r":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.03488372093023256}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"license.html":{"ref":"license.html","tf":0.021052631578947368}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.021052631578947368}}}}},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.011636927851047323},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.007523939808481532},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0273972602739726},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.02304147465437788},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.021929824561403508},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0069821567106283944},"overview.html":{"ref":"overview.html","tf":0.041666666666666664},"license.html":{"ref":"license.html","tf":0.010526315789473684},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.007181942544459644},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.014184397163120567},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.01809954751131222},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.012396694214876033}},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.003419972640218878}},"o":{"docs":{},"r":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818}}}}}},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.02127659574468085},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.01094391244870041},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.03625170998632011},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.06976744186046512},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.027149321266968326},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}},"s":{"2":{"5":{"6":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"3":{"8":{"4":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"docs":{}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"r":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.04878048780487805},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.05263157894736842},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.05063291139240506},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0547945205479452}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.024390243902439025},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.005430566330488751},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0047879616963064295},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.02054794520547945},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.018604651162790697},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.027649769585253458},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.017123287671232876},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.023255813953488372},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":5.027649769585254},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.021929824561403508}}}}}}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"t":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.013432835820895522}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.013964313421256789},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010447761194029851},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"\"":{"docs":{},";":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0062063615205585725},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.008955223880597015}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09523809523809523}},"e":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}},"(":{"docs":{},"'":{"docs":{},"j":{"docs":{},"s":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"overview.html":{"ref":"overview.html","tf":0.08333333333333333},"license.html":{"ref":"license.html","tf":0.021052631578947368},"modules.html":{"ref":"modules.html","tf":0.2},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.024390243902439025},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.02631578947368421},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.02531645569620253},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0273972602739726},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.18181818181818182},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09523809523809523},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.2}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.041666666666666664}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.036593707250342},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.05813953488372093},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.02127659574468085},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.036619718309859155},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.05},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.01809954751131222},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}},"r":{"docs":{},"i":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.01971830985915493}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}}}}}}},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.013824884792626729},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}},"s":{"docs":{},"k":{"docs":{"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025}}}}},"x":{"docs":{},"j":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"f":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}},"o":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"n":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"s":{"2":{"5":{"6":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"3":{"8":{"4":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"5":{"1":{"2":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}},"docs":{}},"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09523809523809523}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"w":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"j":{"docs":{},"w":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005430566330488751}}}}},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010447761194029851}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"/":{"docs":{},"(":{"docs":{},"^":{"docs":{},"|":{"docs":{},"\\":{"docs":{},"s":{"docs":{},")":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"$":{"docs":{},"|":{"docs":{},"\\":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0062063615205585725}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}}}}},"u":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.013188518231186967},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.011940298507462687},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}},".":{"docs":{},"a":{"docs":{},"z":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"/":{"docs":{},".":{"docs":{},"w":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0023939808481532147}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"s":{"docs":{},":":{"1":{"0":{"5":{"8":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"7":{"4":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"1":{"8":{"5":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"9":{"4":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"2":{"0":{"8":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"1":{"6":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"2":{"4":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"3":{"1":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"4":{"9":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"6":{"8":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"7":{"8":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"3":{"1":{"2":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"2":{"0":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"8":{"7":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"2":{"4":{"2":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"6":{"7":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"9":{"6":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"3":{"0":{"0":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"9":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"4":{"4":{"2":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"5":{"5":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"5":{"8":{"9":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"6":{"0":{"2":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"4":{"7":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"9":{"2":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"7":{"7":{"6":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"9":{"1":{"3":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"3":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"6":{"6":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010861132660977503},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.004103967168262654},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.014925373134328358},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}},"a":{"2":{"5":{"6":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.021052631578947368}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}},"g":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005430566330488751},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.010447761194029851},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"p":{"docs":{},"l":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"m":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09473684210526316}}}}}}}},"p":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.008533747090768037}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}}}},"e":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"i":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}}},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.3348849237134726},"license.html":{"ref":"license.html","tf":3.333333333333333},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}},"t":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.00786593707250342},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.03225806451612903},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.013157894736842105}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"[":{"0":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"1":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}}}}}}}},"i":{"docs":{},"c":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.009575923392612859}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}},"e":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}},"n":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.01573187414500684},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.046511627906976744},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.03900709219858156},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.04225352112676056},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.04794520547945205},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.07906976744186046},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.08294930875576037},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.03167420814479638},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.058208955223880594},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.07894736842105263},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.045454545454545456}}}}}},"e":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}},"u":{"docs":{},"b":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}}},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"modules.html":{"ref":"modules.html","tf":0.1},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.01094391244870041},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.024390243902439025},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.02631578947368421},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.02531645569620253},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0273972602739726}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}},"v":{"docs":{},"g":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010259917920656635}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.03488372093023256}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.01773049645390071},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.016901408450704224},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0375},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.028925619834710745},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.047619047619047616}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"s":{"docs":{},":":{"1":{"2":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575}}},"8":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575}}},"docs":{}},"2":{"6":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575}}},"docs":{}},"3":{"3":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575}}},"docs":{}},"4":{"3":{"docs":{"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.003424657534246575}}},"docs":{}},"5":{"3":{"docs":{"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674}}},"4":{"docs":{"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674}}},"5":{"docs":{"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674}}},"docs":{}},"6":{"3":{"docs":{"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576}}},"4":{"docs":{"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576}}},"5":{"docs":{"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576}}},"6":{"docs":{"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576}}},"docs":{}},"7":{"3":{"docs":{"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}},"4":{"docs":{"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}},"5":{"docs":{"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}},"6":{"docs":{"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}},"7":{"docs":{"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}},"8":{"docs":{"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}},"docs":{}},"docs":{}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.1}},"s":{"docs":{},":":{"2":{"1":{"docs":{"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105}}},"docs":{}},"3":{"0":{"docs":{"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266}}},"9":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.047619047619047616}},"s":{"docs":{},":":{"1":{"0":{"0":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"8":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"1":{"4":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"2":{"1":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"7":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"9":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"3":{"6":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"8":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"2":{"4":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"9":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"3":{"5":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"4":{"1":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"6":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"5":{"1":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"6":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"6":{"1":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"6":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"7":{"2":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"7":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"9":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"8":{"5":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"9":{"0":{"docs":{"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0014925373134328358}}},"docs":{}},"docs":{}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091}}},"docs":{}},"docs":{}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"docs":{}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"k":{"docs":{},"e":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.004654771140418929}},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"x":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}},".":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"_":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}}}},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"(":{"docs":{},"'":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"m":{"docs":{},"y":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"x":{"docs":{},"/":{"docs":{},"y":{"docs":{},"/":{"docs":{},"z":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}}}}},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"_":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.003419972640218878}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"'":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"_":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"g":{"2":{"docs":{},"k":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}},"docs":{}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"_":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005471956224350205}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}}}}},"n":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"s":{"docs":{},"'":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"_":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"{":{"docs":{},"\\":{"docs":{},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"1":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"[":{"docs":{},"'":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{},"s":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"o":{"docs":{},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.003419972640218878},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.014084507042253521},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.011267605633802818},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.007462686567164179}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"t":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.019394879751745538},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.03571428571428571},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.007181942544459644},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.023972602739726026},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.027906976744186046},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.03225806451612903},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.021929824561403508},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}},"(":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"_":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.00684931506849315},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.001709986320109439}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}},"docs":{}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"6":{"4":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"+":{"docs":{},"/":{"docs":{},"g":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}}}}},"u":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.005813953488372093},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0125},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.009302325581395349},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.009216589861751152},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.014925373134328358},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.008771929824561403},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0013679890560875513},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.010273972602739725},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015}},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}},"w":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.004445964432284542},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.017123287671232876},"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.04878048780487805},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.05263157894736842},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.05063291139240506},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0547945205479452},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.018433179723502304},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.03582089552238806},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.02631578947368421},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.024793388429752067},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.09523809523809523},"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":0.1}},"o":{"docs":{},"f":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"miscellaneous/typealiases.html":{"ref":"miscellaneous/typealiases.html","tf":6.666666666666666}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.01008533747090768},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.014925373134328358}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":5.023255813953488}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635}}}}}}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0395655546935609},"license.html":{"ref":"license.html","tf":0.021052631578947368},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.024623803009575923},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.02127659574468085},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.03767123287671233},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.03255813953488372},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.027649769585253458},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.023880597014925373},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.02631578947368421},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.012396694214876033}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.016291698991466253},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.00786593707250342},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0010259917920656635},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0030779753761969904}},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}}}}}}}}}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}},"_":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/OAuthErrorEvent.html":{"ref":"classes/OAuthErrorEvent.html","tf":0.012195121951219513},"classes/OAuthEvent.html":{"ref":"classes/OAuthEvent.html","tf":0.013157894736842105},"classes/OAuthInfoEvent.html":{"ref":"classes/OAuthInfoEvent.html","tf":0.012658227848101266},"classes/OAuthSuccessEvent.html":{"ref":"classes/OAuthSuccessEvent.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"miscellaneous/functions.html":{"ref":"miscellaneous/functions.html","tf":0.09090909090909091}}}}}}}}},"v":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007757951900698216},"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.023809523809523808},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.006839945280437756},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.024822695035460994},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.028169014084507043},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.017123287671232876},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.125},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.013953488372093023},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.013824884792626729},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.03619909502262444},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.02066115702479339},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.047619047619047616}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0027359781121751026},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.01773049645390071},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0375},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.004651162790697674},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.004608294930875576},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":5.018099547511312},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.0043859649122807015},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.012396694214876033}}}}}}},"/":{"docs":{},"j":{"docs":{},"w":{"docs":{},"k":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.016901408450704224},"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":0.047619047619047616}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0375}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/OAuthModule.html":{"ref":"modules/OAuthModule.html","tf":0.011904761904761904},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.01773049645390071},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.028925619834710745}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.024822695035460994},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.008450704225352112},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.0625},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.03167420814479638},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":5.024793388429752}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.014184397163120567},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0035460992907801418},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.010638297872340425},"classes/NullValidationHandler.html":{"ref":"classes/NullValidationHandler.html","tf":0.025},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.013574660633484163},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.005970149253731343},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.004524886877828055},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.004132231404958678}}}}}}}}}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.007181942544459644},"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.023255813953488372},"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.02127659574468085},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.0028169014084507044},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.027149321266968326},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.024793388429752067}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous/variables.html":{"ref":"miscellaneous/variables.html","tf":6.7142857142857135}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.006839945280437756},"classes/LoginOptions.html":{"ref":"classes/LoginOptions.html","tf":0.0136986301369863},"classes/OAuthStorage.html":{"ref":"classes/OAuthStorage.html","tf":0.027906976744186046},"classes/ReceivedTokens.html":{"ref":"classes/ReceivedTokens.html","tf":0.018433179723502304},"interfaces/ParsedIdToken.html":{"ref":"interfaces/ParsedIdToken.html","tf":0.017543859649122806}}}}}},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.0015515903801396431}}}},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.021052631578947368}}}}}}}}},"e":{"docs":{},"'":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756},"classes/JwksValidationHandler.html":{"ref":"classes/JwksValidationHandler.html","tf":0.005633802816901409},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}}}}},"l":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0023273855702094647}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/UrlHelperService.html":{"ref":"injectables/UrlHelperService.html","tf":0.011627906976744186}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.0031031807602792862}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.003878975950349108},"license.html":{"ref":"license.html","tf":0.031578947368421054},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010526315789473684},"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.003761969904240766},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.01791044776119403}}}}}}}},"/":{"docs":{},"o":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878},"interfaces/AuthConfig.html":{"ref":"interfaces/AuthConfig.html","tf":0.0029850746268656717}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.002051983584131327}}}}}},"w":{"docs":{},"w":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0006839945280437756}}}}},"z":{"docs":{},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.0007757951900698216}}}},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.08333333333333333}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OAuthService.html":{"ref":"injectables/OAuthService.html","tf":0.0003419972640218878}}}}}}}},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"=":{"docs":{},"/":{"docs":{},"g":{"docs":{"classes/AbstractValidationHandler.html":{"ref":"classes/AbstractValidationHandler.html","tf":0.0070921985815602835},"classes/ValidationHandler.html":{"ref":"classes/ValidationHandler.html","tf":0.00904977375565611},"interfaces/ValidationParams.html":{"ref":"interfaces/ValidationParams.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}},"length":2744},"corpusTokens":["0","0.33","0.5","0.75","1","10","1000","11","1970","2","20","20.000","2017","3","4","4202","4202]/index.html","4202]/silent","4711","4th","60","600","75","8089|4200","9]{3","_\").replace(/=/g","_storag","abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789","abov","abstract","abstractvalidationhandl","access","access_token","accesstoken","accesstokentimeoutsubscript","accord","action","actual","add","addit","additionalst","adjust","against","alg","alg.match(/^.s[0","alg.substr(2","alg2kty(alg","algorithm","alias","allow","allowedalgorithm","alreadi","although","and/or","angular","angular/common","angular/cor","angular/http","angular2","anoth","api","app","app/home.html","appcompon","append","applic","application/x","appmodul","approach","approutermodul","arg","aris","around","array","array.isarray(claims.aud","array.isarray(params.jwks['key","asset","associ","asstr","assum","at_hash","athash","attack","audienc","auth","authconfig","author","authorization_endpoint","authorizationhead","automat","avoid","b/c","b64decodeunicod","b64decodeunicode(claimsbase64","b64decodeunicode(headerbase64","b64decodeunicode(str","back","backend","base","base64","base64data","base64data.length","bearer","befor","below","best","between","boolean","bootstrap","both","brake","break","bring","brows","browser","browser'","btoa(leftmosthalf","build","bundl","bytearrayasstr","c","calchash","calchash(valuetohash","calctimeout(expir","calcul","call","callback","callontokenreceivedifexists(opt","case","catch(err","catch(error","catch(reason","chang","charg","check","cite","claim","claims.aud","claims.aud.every(v","claims.aud.join","claims.exp","claims.given_nam","claims.iat","claims.iss","claims.nonc","claims.sub","claims['at_hash","claimsathash","claimsbase64","claimsjson","class","clear","clearaccesstokentim","clearhashafterlogin","clearidtokentim","cli","cli.json","client","client'","client_id","clientid","code","commonj","commonmodul","commun","compat","compens","compon","condit","config","configu","configur","configure(config","connect","consol","console.debug(\"log","console.debug('given_nam","console.debug('oauth/oidc","console.debug('ok","console.debug('refresh","console.debug('st","console.debug('validatesignatur","console.debug(context","console.debug.apply(consol","console.error","console.error(\"actu","console.error(\"error","console.error(\"exptect","console.error('error","console.error('refresh","console.error(err","console.error(error","console.error(reason","console.warn('no","console.warn(err","const","constructor","constructor(http","constructor(priv","constructor(typ","contain","context","contract","cooki","copi","copyright","core","creat","createandsavenonc","createloginurl","createnonc","credenti","credit","current","custom","customhashfrag","customqueryparam","customredirecturi","damag","data","date","date.now","deal","debug","debug(...arg","decid","declar","decodeuricomponent(hash","decodeuricomponent(parts[\"st","default","defaultconfig","defin","delay(this.siletrefreshtimeout","delay(timeout","delta","demand","demo","demonstr","depend","deprec","describ","descript","design","detect","dicoveri","differ","directli","directori","disabl","disableoauth2statecheck","discoveri","discovery_document_load","discovery_document_load_error","discovery_document_validation_error","discoverydocumentload","discoverydocumentloadedsubject","disoveri","display","distribut","do","do(e","doc","doc.authorization_endpoint","doc.end_session_endpoint","doc.grant_types_support","doc.issu","doc.jwks_uri","doc.sub","doc.token_endpoint","doc.userinfo_endpoint","doc['issu","document","document.body.appendchild(ifram","document.body.removechild(existingifram","document.createelement('ifram","document.getelementbyid(this.silentrefreshiframenam","domain","don't","dosn't","dummi","dummyclientsecret","dure","e","e.data","e.typ","eas","ec","email","enabl","encodeuricomponent(id_token","encodeuricomponent(loginhint","encodeuricomponent(nonc","encodeuricomponent(redirecturi","encodeuricomponent(scop","encodeuricomponent(st","encodeuricomponent(that.clientid","encodeuricomponent(that.resourc","encodeuricomponent(that.responsetyp","encodeuricomponent(this.customqueryparams[key","encodeuricomponent(this.postlogoutredirecturi","end_session_endpoint","endpoint","endpont","enter","enum","environ","err","err));when","error","error(\"can","error(\"createnonc","error('algorithm","error('array","error('cannot","error('eith","error('loginurl","error('paramet","error('sil","error('tokenendpoint","error('userinfoendpoint","errors.length","errors.push('everi","errors.push('http","es256","es384","escapedkey","escapedvalu","event","eventlisten","eventssubject","eventtyp","exampl","exchang","exist","existingclaim","existingclaims['sub","existingifram","expect","expectedprefix","expir","expiresat","expiresatmsec","expiresin","expiresinmillisecond","explicitli","export","expos","express","extend","fact","factor","fail","fals","far","featur","fetch","fetchtokenusingpasswordflow","fetchtokenusingpasswordflow(usernam","fetchtokenusingpasswordflowandloaduserprofil","fetchtokenusingpasswordflowandloaduserprofile(usernam","field","file","filter(","find","fire","first","fit","flow","follow","for(let","form","former","forroot","found","fragment","free","full","fullurl","function","furnish","further","g","geheim","geheim').then","geheim').then((resp","gener","get","getaccesstoken","getaccesstokenexpir","gethashfragmentparam","gethashfragmentparams(customhashfrag","getidentityclaim","getidtoken","getidtokenexpir","getitem","getitem(key","getkeycount","give","good","graceperiod","graceperiodinsec","grant","granttypessupport","half","hallo","handleloginerror(opt","handler","handler.t","handler.ts:107","handler.ts:11","handler.ts:114","handler.ts:17","handler.ts:19","handler.ts:2","handler.ts:23","handler.ts:24","handler.ts:25","handler.ts:3","handler.ts:37","handler.ts:4","handler.ts:42","handler.ts:5","handler.ts:6","handler.ts:7","handler.ts:70","handler.ts:8","handler.ts:87","happen","hash","hash.indexof","hash.substr(1","hash.substr(questionmarkposition+1","hashalg","hashalg.digeststring(valuetohash","hashlocationstrategi","hashstrategi","hasvalidaccesstoken","hasvalididtoken","header","header.kid","headerbase64","headerjson","headers.set('author","headers.set('cont","helper","helper.servic","helper.service.t","helper.service.ts:29","helper.service.ts:6","helper.t","here","herebi","hidden","his/her","holder","home","homecompon","hook","hs256","hs384","hs512","http","http://localhost:8080","http://localhost:8080/#/homeev","httpmodul","https://github.com/manfredsteyer/angular","https://manfredsteyer.github.io/angular","https://steyer","https://tools.ietf.org/html/rfc7517","httpscheck","i=0","iat","id","id_token","id_token'","id_token_hint","idclaim","ident","identityserv","idtoken","idtoken.idtoken","idtoken.idtokenclaimsjson","idtoken.idtokenexpiresat","idtoken.split","idtokenclaim","idtokenclaimsjson","idtokenexpiresat","idtokenhandl","idtokenhead","idtokenheaderjson","idtokentimeoutsubscript","ifram","iframe.id","iframe.setattribute('src","iframe.style.vis","ignor","implcit","implement","impli","implicit","import","includ","index","index.html","infer","inferhashalgorithm","inferhashalgorithm(jwthead","info","info.st","inform","initi","initialnavig","initimplicitflow","initimplicitflow(additionalst","inject","instanc","instanceof","instead","interact","interfac","intern","invalid","invalid_nonce_in_st","isn't","issu","issuedatmsec","issuer","issuer'","issuercheck","isvalid","java","job","json","json.parse(claim","json.parse(claimsjson","json.parse(headerjson","json.stringify(doc","jsrasign","jwk","jwks_load_error","jwks_uri","jwksuri","jwksvalidationhandl","jwksvalidationhandler();in","jwtheader","jwtheader['alg","k['kid","k['kti","k['use","keep","key","keycloak","keyobj","keys.filter(k","keys.find(k","kick","kid","kind","known","known/openid","kti","later","lcurl","lcurl.match(/^http:\\/\\/localhost","lcurl.startswith('http","leftmosthalf","legend","leverag","liabil","liabl","lib","librari","licens","life","limit","line","list","load","loaddiscoverydocu","loaddiscoverydocument(fullurl","loaddiscoverydocumentandtrylogin","loadjwk","loadkey","loaduserprofil","local","localhost:[8080","localstorag","locat","location.hash","location.href","location.origin","locationstrategi","log","loggin","login","login_hint","loginhint","loginhint).then(funct","loginopt","loginurl","logoff","logout","logout(noredirecttologouturl","logouturl","main","make","manfr","manual","map","map(","map(r","match","matchingkey","matchingkeys.length","matchingkeys[0","max/geheim","mean","mention","merchant","merg","messag","messageev","method","millisecond","mind","miscellan","miss","modifi","modul","modulewithprovid","more","msec","multipl","name","navig","need","net","net/.net","new","ngmodul","nonc","nonceinst","noninfring","noredirecttologouturl","note","noth","notic","now","now.gettim","null","nullvalidationhandl","number","oauth","oauth2","oautherrorev","oautherrorevent('discovery_document_load_error","oautherrorevent('discovery_document_validation_error","oautherrorevent('invalid_nonce_in_st","oautherrorevent('jwks_load_error","oautherrorevent('silent_refresh_error","oautherrorevent('silent_refresh_timeout","oautherrorevent('token_error","oautherrorevent('token_refresh_error","oautherrorevent('token_validation_error","oautherrorevent('user_profile_load_error","oautherrorevent).first","oauthev","oauthinfoev","oauthinfoevent('token_expir","oauthmodul","oauthmodule.forroot","oauthservic","oauthstorag","oauthsuccessev","oauthsuccessevent('discovery_document_load","oauthsuccessevent('silently_refresh","oauthsuccessevent('token_receiv","oauthsuccessevent('token_refresh","oauthsuccessevent('user_profile_load","object","object.assign","object.assign(thi","object.getownpropertynames(this.customqueryparam","observ","observable.of(new","obtain","of(new","offline_access","oidc","oidc.\\n","oidc/angular","oidc/doc","ok","on","onloginerror","ontokenreceiv","openid","oper","optin","option","options.customhashfrag","options.disableoauth2statecheck","options.onloginerror","options.onloginerror(part","options.ontokenreceiv","options.ontokenreceived(tokenparam","options.validationhandl","order","otherparam","otherwis","out","output","over","overrid","overview","owner","packag","padbase64(base64data","page","pair","param","paramet","params.idtoken","params.idtokenclaims['at_hash'].replace(/=/g","params.idtokenhead","params.idtokenheader['alg","params.idtokenheader['kid","params.jwk","params.jwks['key","params.jwks['keys'].length","params.loadkey","parent.postmessage(location.hash","pars","parsedidtoken","parseint(expiresat","parseint(this._storage.getitem(\"expires_at","parseint(this._storage.getitem(\"id_token_expires_at","parsequerystr","parsequerystring(querystr","part","particular","parts[\"access_token","parts[\"error","parts[\"id_token","parts['expires_in","pass","passt","password","passwort","pathlocationstrategi","perform","period","permiss","permit","person","platform","plattform","pleas","portion","possibl","post_logout_redirect_uri","postlogoutredirecturi","practic","prefixedmessag","prefixedmessage.startswith(expectedprefix","prefixedmessage.substr(expectedprefix.length","preserv","prevent","privat","processidtoken","processidtoken(idtoken","profil","promis","promise((resolv","promise.reject('eith","promise.reject('signatur","promise.reject(err","promise.reject(error","promise.reject(ev","promise.resolv","promise.resolve(nul","properti","protect","provid","ps256","ps384","ps512","public","publish","purpos","queri","querystr","querystring.split","question","questionmarkposit","quit","r","r.json()).subscrib","race([error","rais","read","readonli","reason","receiv","received_first_token","receivedfirsttoken","receivedtoken","redhad","redhat'","redirect","redirect_uri","redirecturi","redirecturi).then(url","refresh","refresh.html","refresh.html\";pleas","refresh_token","refreshtoken","regard","regist","registerd","reject","reject('discovery_document_validation_error","reject('loginurl","reject(err","relax","relay","remoteonli","remov","removeitem","removeitem(key","removesilentrefresheventlisten","replace(/\\//g","repres","request","requestaccesstoken","requir","require('jsrsasign","requirehttp","reset","resolve(doc","resolve(jwk","resolve(nul","resolve(result","resolve(tokenrespons","resourc","respond","response_typ","responsetyp","restrict","result","result.idtoken","result.idtokenclaim","retri","return","right","risk","rng","rngurl","root","rout","router","routermodule.forroot(app_rout","rs","rs.keyutil.getkey(key","rs.kjur.crypto.messagedigest({alg","rs.kjur.jws.jws.verifyjwt(params.idtoken","rs256","rs384","rs512","rsa","rule","run","runn","rxjs/add/observable/of","rxjs/add/observable/rac","rxjs/add/operator/delay","rxjs/add/operator/do","rxjs/add/operator/filt","rxjs/add/operator/first","rxjs/add/operator/map","rxjs/add/operator/publish","rxjs/add/operator/topromis","rxjs/observ","rxjs/subject","rxjs/subscript","safe","sampl","savednonc","scaffold","scope","scope.match(/(^|\\s)openid($|\\","search","search.set('client_id","search.set('client_secret","search.set('grant_typ","search.set('password","search.set('refresh_token","search.set('scop","search.set('usernam","search.tostr","second","secreat","secret","section","secur","see","sell","send","sens","separatorindex","seperationchar","server","server'","server.azurewebsites.net/ident","server.azurewebsites.net/identity/.wel","server.azurewebsites.net/identity/connect/author","server.azurewebsites.net/identity/connect/endsess","server.azurewebsites.net/identity/connect/token","server.azurewebsites.net/identity/connect/userinfo","servic","service.t","service.ts:1058","service.ts:1074","service.ts:1185","service.ts:1194","service.ts:1208","service.ts:1216","service.ts:1224","service.ts:1231","service.ts:1249","service.ts:1268","service.ts:1278","service.ts:1312","service.ts:1320","service.ts:187","service.ts:242","service.ts:267","service.ts:296","service.ts:300","service.ts:309","service.ts:442","service.ts:455","service.ts:589","service.ts:602","service.ts:647","service.ts:692","service.ts:776","service.ts:913","service.ts:93","service.ts:966","sessionstorag","set","setitem","setitem(key","setstorag","setstorage(storag","setup","setupaccesstokentim","setupautomaticsiletrefresh","setupidtokentim","setupsilentrefresheventlisten","setuptim","sha","sha256(accesstoken","shall","short","show","showdebuginform","shown","side","sig","sign","signatur","silent","silent_refresh_error","silent_refresh_timeout","silently_refresh","silently_refreshed').first","silentrefresh","silentrefreshiframenam","silentrefreshmessageprefix","silentrefreshpostmessageeventlisten","silentrefreshredirecturi","silentrefreshshowifram","siletrefreshtimeout","similar","simpl","singl","skip","softwar","solut","somevalu","sourc","spa","spa'","spec","specif","specifi","src/base64","src/config.t","src/auth.config.ts:100","src/auth.config.ts:108","src/auth.config.ts:114","src/auth.config.ts:12","src/auth.config.ts:121","src/auth.config.ts:127","src/auth.config.ts:129","src/auth.config.ts:136","src/auth.config.ts:18","src/auth.config.ts:24","src/auth.config.ts:29","src/auth.config.ts:35","src/auth.config.ts:41","src/auth.config.ts:46","src/auth.config.ts:51","src/auth.config.ts:56","src/auth.config.ts:61","src/auth.config.ts:66","src/auth.config.ts:7","src/auth.config.ts:72","src/auth.config.ts:77","src/auth.config.ts:79","src/auth.config.ts:85","src/auth.config.ts:90","src/events.t","src/events.ts:21","src/events.ts:30","src/events.ts:39","src/index.t","src/oauth","src/token","src/types.t","src/types.ts:12","src/types.ts:18","src/types.ts:26","src/types.ts:33","src/types.ts:43","src/types.ts:53","src/types.ts:54","src/types.ts:55","src/types.ts:63","src/types.ts:64","src/types.ts:65","src/types.ts:66","src/types.ts:73","src/types.ts:74","src/types.ts:75","src/types.ts:76","src/types.ts:77","src/types.ts:78","src/url","standard","start","startup","state","state.split","state/nonc","statepart","stateparts.length","stateparts[0","stateparts[1","static","steyer","still","storag","store","storeaccesstokenresponse(accesstoken","storeidtoken","storeidtoken(idtoken","strictdiscoverydocumentvalid","stricter","string","sub","subject","sublicens","subscribe(","subscript","substanti","succeed","success","successfulli","such","super(typ","support","sure","svg","switch(alg.charat(0","take","taken","task","templateurl","tenant","tenminutesinmsec","test","testen","text","that'","that._storage.setitem(\"nonc","that.getaccesstoken","that.getidentityclaim","that.getidtoken","that.loginurl","that.loginurl.indexof","that.oidc","that.resourc","that.scop","that.stat","then(_","then(info","then(key","then(result","therefor","third","this._storag","this._storage.getitem(\"access_token","this._storage.getitem(\"expires_at","this._storage.getitem(\"id_token","this._storage.getitem(\"id_token_claims_obj","this._storage.getitem(\"nonc","this._storage.getitem('refresh_token","this._storage.setitem(\"access_token","this._storage.setitem(\"expires_at","this._storage.setitem(\"id_token","this._storage.setitem(\"id_token_claims_obj","this._storage.setitem(\"id_token_expires_at","this._storage.setitem(\"refresh_token","this._storage.setitem('id_token_claims_obj","this.accesstokentimeoutsubscript","this.accesstokentimeoutsubscription.unsubscrib","this.alg2kty(alg","this.allowedalgorithm","this.calchash(params.accesstoken","this.calctimeout(expir","this.callontokenreceivedifexists(opt","this.checkathash(validationparam","this.checksignature(validationparams).then(_","this.clearaccesstokentim","this.clearhashafterlogin","this.clearidtokentim","this.clientid","this.createandsavenonce().then((nonc","this.createloginurl(additionalst","this.createloginurl(nul","this.createnonce().then(funct","this.customqueryparam","this.debug('error","this.debug('refresh","this.debug('tim","this.debug('tokenrespons","this.debug('userinfo","this.discoverydocumentload","this.discoverydocumentloadedsubject.asobserv","this.discoverydocumentloadedsubject.next(doc","this.dummyclientsecret","this.ev","this.events.filter(","this.eventssubject.asobserv","this.eventssubject.next(","this.eventssubject.next(err","this.eventssubject.next(ev","this.eventssubject.next(new","this.eventssubject.next(result","this.getaccesstoken","this.getaccesstokenexpir","this.getidentityclaim","this.getkeycount","this.graceperiodinsec","this.granttypessupport","this.handleloginerror(opt","this.hasvalidaccesstoken","this.hasvalididtoken","this.http.get(fullurl).map(r","this.http.get(this.jwksuri).map(r","this.http.get(this.userinfoendpoint","this.http.post(this.tokenendpoint","this.idtokentimeoutsubscript","this.idtokentimeoutsubscription.unsubscrib","this.inferhashalgorithm(params.idtokenhead","this.issu","this.jwk","this.jwks['key","this.jwks['keys'].length","this.jwksuri","this.loaddiscoverydocument().then((doc","this.loadjwk","this.loadjwks().then(_","this.loaduserprofil","this.loginurl","this.logouturl","this.logouturl.replace(/\\{\\{id_token","this.oauthservice.clientid","this.oauthservice.customqueryparam","this.oauthservice.dummyclientsecret","this.oauthservice.events.subscribe(","this.oauthservice.fetchtokenusingpasswordflow('max","this.oauthservice.fetchtokenusingpasswordflowandloaduserprofile('max","this.oauthservice.getaccesstoken","this.oauthservice.getidentityclaim","this.oauthservice.initimplicitflow","this.oauthservice.initimplicitflow('http://www.myurl.com/x/y/z');aft","this.oauthservice.issu","this.oauthservice.loaddiscoverydocument().then","this.oauthservice.loaddiscoverydocument(url).then","this.oauthservice.loaduserprofil","this.oauthservice.loginurl","this.oauthservice.logout","this.oauthservice.logouturl","this.oauthservice.redirecturi","this.oauthservice.refreshtoken().then","this.oauthservice.scop","this.oauthservice.setstorage(sessionstorag","this.oauthservice.silentrefresh","this.oauthservice.silentrefreshredirecturi","this.oauthservice.tokenendpoint","this.oauthservice.tokenvalidationhandl","this.oauthservice.trylogin","this.oauthservice.trylogin().then(_","this.oauthservice.userinfoendpoint","this.oidc","this.padbase64(tokenparts[0","this.padbase64(tokenparts[1","this.parsequerystring(hash","this.redirecturi","this.removesilentrefresheventlisten","this.requestaccesstoken","this.requirehttp","this.responsetyp","this.rngurl","this.router.navig","this.scop","this.setstorage(sessionstorag","this.setstorage(storag","this.setupaccesstokentim","this.setupidtokentim","this.setupsilentrefresheventlisten","this.setuptim","this.showdebuginform","this.silentrefresh","this.silentrefreshiframenam","this.silentrefreshmessageprefix","this.silentrefreshpostmessageeventlisten","this.silentrefreshredirecturi","this.silentrefreshshowifram","this.stat","this.storeaccesstokenresponse(accesstoken","this.storeaccesstokenresponse(tokenresponse.access_token","this.storeidtoken(result","this.strictdiscoverydocumentvalid","this.timeoutfactor","this.tobytearrayasstring(result","this.tokenendpoint","this.tokenvalidationhandl","this.tokenvalidationhandler.validatesignature(param","this.trylogin","this.urlhelper.gethashfragmentparam","this.urlhelper.gethashfragmentparams(options.customhashfrag","this.userinfoendpoint","this.validatediscoverydocument(doc","this.validatenonceforaccesstoken(accesstoken","this.validatesignature(param","this.validateurlagainstissuer(url","this.validateurlforhttps(fullurl","this.validateurlforhttps(this.loginurl","this.validateurlforhttps(this.tokenendpoint","this.validateurlforhttps(this.userinfoendpoint","this.validateurlforhttps(url","this.validateurlfromdiscoverydocument(doc['authorization_endpoint","this.validateurlfromdiscoverydocument(doc['end_session_endpoint","this.validateurlfromdiscoverydocument(doc['jwks_uri","this.validateurlfromdiscoverydocument(doc['token_endpoint","this.validateurlfromdiscoverydocument(doc['userinfo_endpoint","three","throw","time","timeout","timeoutfactor","timespan","timestamp","tobytearrayasstr","tobytearrayasstring(hexstr","togeht","token","token'","token(","token_endpoint","token_error","token_expir","token_receiv","token_received').subscribe(_","token_refresh","token_refresh_error","token_timeout","token_validation_error","tokenendpoint","tokenhash","tokenhash.length","tokenhash.substr(0","tokenhashbase64","tokenhashbase64.replace(/\\+/g","tokenparam","tokenpart","tokenrespons","tokenresponse.expires_in","tokenresponse.refresh_token","tokenvalid","tokenvalidationhandl","topromis","tort","transmit","tri","trigger","true","trylogin","trylogin(opt","ts","two","type","typealias","typeof","undefin","up","uri","url","url.tolowercas","url.tolowercase().startswith(this.issuer.tolowercas","urlencod","urlhelp","urlhelperservic","urlsearchparam","us","usecas","usehash","user","user'","user_profile_load","user_profile_load_error","userinfo","userinfo_endpoint","userinfoendpoint","usernam","username/password","username/passwort","v","valid","validateathash","validateathash(param","validateathash(validationparam","validatediscoverydocument(doc","validatenonceforaccesstoken(accesstoken","validatesignatur","validatesignature(param","validatesignature(validationparam","validateurlagainstissuer(url","validateurlforhttps(url","validateurlfromdiscoverydocument(url","validation/jwk","validation/nul","validation/valid","validationhandl","validationparam","valu","valuetohash","var","variabl","version","via","void","voucher","w/o","want","warn","warranti","we'v","web","webpack","well","whether","window","window.addeventlistener('messag","window.location.hash","window.location.origin","window.removeeventlistener('messag","within","without","work","wrong","www","zoom","zum"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-oauth2-oidc\nSupport for OAuth 2 and OpenId Connect (OIDC) in Angular.\n\nCredits\n\ngenerator-angular2-library for scaffolding a angular library\njsrasign for validating token signature and for hashing\nIdentity Server (used for Testing with an .NET/.NET Core Backend)\nKeycloak (Redhad) for Testing with Java\n\nResources\n\nSources and Sample:\nhttps://github.com/manfredsteyer/angular-oauth2-oidc\n\nSource Code Documentation\nhttps://manfredsteyer.github.io/angular-oauth2-oidc/angular-oauth2-oidc/docs/\n\n\nTested Environment\nSuccessfully tested with the Angular 2 and 4 and its Router, PathLocationStrategy as well as HashLocationStrategy and CommonJS-Bundling via webpack. At server side we've used IdentityServer (.NET/ .NET Core) and Redhat's Keycloak (Java).\nNew Features in Version 2\n\nToken Refresh for Implicit Flow by implementing \"silent refresh\"\nValidating the signature of the received id_token\nProviding Events via the observable events.\nThe event token_expires can be used togehter with a silent refresh to automatically refresh a token when/ before it expires (see also property timeoutFactor).\n\nAdditional Features\n\nLogging in via OAuth2 and OpenId Connect (OIDC) Implicit Flow (where user is redirected to Identity Provider)\n\"Logging in\" via Password Flow (where user enters his/her password into the client)\nToken Refresh for Password Flow by using a Refresh Token\nAutomatically refreshing a token when/ some time before it expires\nQuerying Userinfo Endpoint\nQuerying Discovery Document to ease configuration\nValidating claims of the id_token regarding the specs\nHook for further custom validations\nSingle-Sign-Out by redirecting to the auth-server's logout-endpoint\n\nBreaking Changes in Version 2\n\nThe property oidc defaults to true.\nIf you are just using oauth2, you have to set oidc to false. Otherwise, the validation of the user profile will fail!\nBy default, sessionStorage is used. To use localStorage call method setStorage\nDemands using https as OIDC and OAuth2 relay on it. This rule can be relaxed using the property requireHttps, e. g. for local testing.\nDemands that every url provided by the discovery document starts with the issuer's url. This can be relaxed by using the property strictDiscoveryDocumentValidation.\n\nSample-Auth-Server\nYou can use the OIDC-Sample-Server mentioned in the samples for Testing. It assumes, that your Web-App runns on http://localhost:8080.\nUsername/Password: max/geheim\nclientIds: \n\nspa-demo (implicit flow)\ndemo-resource-owner (resource owner password flow)\n\nredirectUris:\n\nlocalhost:[8080-8089|4200-4202]\nlocalhost:[8080-8089|4200-4202]/index.html\nlocalhost:[8080-8089|4200-4202]/silent-refresh.html\n\nSetup Provider for OAuthService\nimport { OAuthModule } from 'angular-oauth2-oidc';\n[...]\n\n@NgModule({\n  imports: [ \n    [...]\n    HttpModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    [...]\n  ],\n  bootstrap: [\n    AppComponent \n  ]\n})\nexport class AppModule {\n}Using Implicit Flow\nThis section shows how to use the implicit flow, which is redirecting the user to the auth-server for the login.\nConfigure Library for Implicit Flow (using discovery document)\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. The SPA is registerd with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        // The first three are defined by OIDC. The 4th is a usecase-specific one\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // The name of the auth-server that has to be mentioned within the token\n        this.oauthService.issuer = \"https://steyer-identity-server.azurewebsites.net/identity\";\n\n        // Load Discovery Document and then try to login the user\n        this.oauthService.loadDiscoveryDocument().then(() => {\n\n            // This method just tries to parse the token(s) within the url when\n            // the auth-server redirects the user back to the web-app\n            // It dosn't send the user the the login page\n            this.oauthService.tryLogin();      \n\n        });\n\n  }\n\n}Configure Library for Implicit Flow (without discovery document)\nWhen you don't have a discovery document, you have to configure more properties manually:\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.loginUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/authorize\"; //Id-Provider?\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // To also enable single-sign-out set the url for your auth-server's logout-endpoint here\n        this.oauthService.logoutUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/endsession\";\n\n        // This method just tries to parse the token(s) within the url when\n        // the auth-server redirects the user back to the web-app\n        // It dosn't send the user the the login page\n        this.oauthService.tryLogin();      \n\n\n  }\n\n}Home-Component (for login)\nimport { Component } from '@angular/core';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\n@Component({\n    templateUrl: \"app/home.html\" \n})\nexport class HomeComponent {\n\n    constructor(private oAuthService: OAuthService) {\n    }\n\n    public login() {\n        this.oAuthService.initImplicitFlow();\n    }\n\n    public logoff() {\n        this.oAuthService.logOut();\n    }\n\n    public get name() {\n        let claims = this.oAuthService.getIdentityClaims();\n        if (!claims) return null;\n        return claims.given_name; \n    }\n\n}\n    Hallo\n\n\n    Hallo, {{name}}\n\n\n\n    Login\n\n\n    Logout\n\n\n\n    Username/Passwort zum Testen: max/geheim\nValidate id_token\nYou can hook in an implementation of the interface TokenValidator to validate the signature of the received id_token and its at_hash property. This packages provides two implementations:\n\nJwksValidationHandler\nNullValidationHandler\n\nThe former one validates the signature against public keys received via the discovery document (property jwks) and the later one skips the validation on client side. \nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\n\n[...]\n\nthis.oauthService.tokenValidationHandler = new JwksValidationHandler();In cases where no ValidationHandler is defined, you receive a warning on the console. This means that the library wants you to explicitly decide on this. \nCalling a Web API with OAuth-Token\nPass this Header to the used method of the Http-Service within an Instance of the class Headers:\nvar headers = new Headers({\n    \"Authorization\": \"Bearer \" + this.oauthService.getAccessToken()\n});Refreshing a Token when using Implicit Flow\nTo refresh your tokens when using implicit flow you can use a silent refresh. This is a well-known solution that compensates the fact that implicit flow does not allow for issuing a refresh token. It uses a hidden iframe to get another token from the auth-server. When the user is there still logged in (by using a cookie) it will respond without user interaction and provide new tokens.\nTo use this approach, setup a redirect uri for the silent refresh:\nthis.oauthService.silentRefreshRedirectUri = window.location.origin + \"/silent-refresh.html\";Please keep in mind that this uri has to be configured at the auth-server too.\nThis file is loaded into the hidden iframe after getting new tokens. Its only task is to send the received tokens to the main application:\n\n\n    \n    parent.postMessage(location.hash, location.origin);\n    \n\nPlease make sure that this file is copied to your output directory by your build task. When using the CLI you can define it as an asset for this. For this, you have to add the following line to the file .angular-cli.json:\n\"assets\": [\n    [...],\n    \"silent-refresh.html\"\n],To perform a silent refresh, just call the following method:\nthis\n    .oauthService\n    .silentRefresh()\n    .then(info => console.debug('refresh ok', info))\n    .catch(err => console.error('refresh error', err));When there is an error in the iframe that prevents the communication with the main application, silentRefresh will give you a timeout. To configure the timespan for this, you can set the property siletRefreshTimeout (msec). The default value is 20.000 (20 seconds).\nAutomatically refreshing a token when/ before it expires\nTo automatically refresh a token when/ some time before it expires, you can make use of the event token_expires:\nthis\n    .oauthService\n    .events\n    .filter(e => e.type == 'token_expires')\n    .subscribe(e => {\n        this.oauthService.silentRefresh();\n    });By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\nCallback after successful login\nThere is a callback onTokenReceived, that is called after a successful login. In this case, the lib received the access_token as\nwell as the id_token, if it was requested. If there is an id_token, the lib validated it.\nthis.oauthService.tryLogin({\n    onTokenReceived: context => {\n        //\n        // Output just for purpose of demonstration\n        // Don't try this at home ... ;-)\n        // \n        console.debug(\"logged in\");\n        console.debug(context);\n    }\n});Preserving State like the requested URL\nWhen calling initImplicitFlow, you can pass an optional state which could be the requested url:\nthis.oauthService.initImplicitFlow('http://www.myurl.com/x/y/z');After login succeeded, you can read this state:\nthis.oauthService.tryLogin({\n    onTokenReceived: (info) => {\n        console.debug('state', info.state);\n    }\n})Custom Query Parameter\nYou can set the property customQueryParams to a hash with custom parameter that are transmitted when starting implicit flow.\nthis.oauthService.customQueryParams = {\n    'tenant': '4711',\n    'otherParam': 'someValue'\n};Routing with the HashStrategy\nIf you are leveraging the LocationStrategy which the Router is using by default, you can skip this section.\nWhen using the HashStrategy for Routing, the Router will override the received hash fragment with the tokens when it performs it initial navigation. This prevents the library from reading them. To avoid this, disable initial navigation when setting up the routes for your root module:\nexport let AppRouterModule = RouterModule.forRoot(APP_ROUTES, { \n    useHash: true,\n    initialNavigation: false\n});After tryLogin did its job, you can manually perform the initial navigation:\nthis.oauthService.tryLogin().then(_ => {\n    this.router.navigate(['/']);\n})Another solution is the use a redirect uri that already contains the initial route. In this case the router will not override it. An example for such a redirect uri is\n    http://localhost:8080/#/homeEvents\nthis.oauthService.events.subscribe(e => {\n    console.debug('oauth/oidc event', e);\n})Using Password-Flow\nThis section shows how to use the password flow, which demands the user to directly enter his or her password into the client.\nConfigure Library for Password Flow (using discovery document)\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease not, that this configuation is quite similar to the one for the implcit flow.\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        // The auth-server used here only returns a refresh token (see below), when the scope offline_access is requested\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secreat is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n        // Load Discovery Document and then try to login the user\n        let url = 'https://steyer-identity-server.azurewebsites.net/identity/.well-known/openid-configuration';\n        this.oauthService.loadDiscoveryDocument(url).then(() => {\n            // Do what ever you want here\n        });\n\n  }\n\n}Configure Library for Password Flow (without discovery document)\nIn cases where you don't have an OIDC based discovery document you have to configure some more properties manually:\n@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.tokenEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/token\"; \n\n        // Url with user info endpoint\n        // This endpont is described by OIDC and provides data about the loggin user\n        // This sample uses it, because we don't get an id_token when we use the password flow\n        // If you don't want this lib to fetch data about the user (e. g. id, name, email) you can skip this line\n        this.oauthService.userinfoEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/userinfo\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secreat is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n  }\n\n}Fetching an Access Token by providing the current user's credentials\nthis.oauthService.fetchTokenUsingPasswordFlow('max', 'geheim').then((resp) => {\n\n      // Loading data about the user\n      return this.oauthService.loadUserProfile();\n\n}).then(() => {\n\n      // Using the loaded user data\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name); \n\n})There is also a short form for fetching the token and loading the user profile:\nthis.oauthService.fetchTokenUsingPasswordFlowAndLoadUserProfile('max', 'geheim').then(() => {\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name); \n});Refreshing the current Access Token\nUsing the password flow you MIGHT get a refresh token (which isn't the case with the implicit flow by design!). You can use this token later to get a new access token, e. g. after it expired.\nthis.oauthService.refreshToken().then(() => {\n          console.debug('ok');\n})\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Manfred Steyer\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n        \n            \n                \n                    OAuthModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OAuthModule.html":{"url":"modules/OAuthModule.html","title":"module - OAuthModule","body":"\n                   \n\n\n\n\n  Modules\n  OAuthModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/index.ts\n        \n\n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OAuthService } from './oauth-service';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/first';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/publish';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/race';\n\nexport * from \"./oauth-service\";\nexport * from './token-validation/jwks-validation-handler';\nexport * from './token-validation/null-validation-handler';\nexport * from './token-validation/validation-handler';\nexport * from \"./url-helper.service\";\nexport * from './config';\nexport * from './types';\n\nimport { UrlHelperService } from \"./url-helper.service\";\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n  ],\n  exports: [\n  ]\n})\nexport class OAuthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: OAuthModule,\n      providers: [\n        OAuthService,\n        UrlHelperService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OAuthService.html":{"url":"injectables/OAuthService.html","title":"injectable - OAuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  OAuthService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/oauth-service.ts\n        \n\n            \n                Description\n            \n            \n                Service for logging in and logging out with\nOIDC and OAuth2. Supports implicit flow and\npassword flow.\n\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public events\n                                    \n                                    \n                                        Public state\n                                    \n                                    \n                                        Public tokenValidationHandler\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public authorizationHeader\n                                    \n                                    \n                                        Public configure\n                                    \n                                    \n                                        Public createAndSaveNonce\n                                    \n                                    \n                                        Protected createNonce\n                                    \n                                    \n                                        Public fetchTokenUsingPasswordFlow\n                                    \n                                    \n                                        Public fetchTokenUsingPasswordFlowAndLoadUserProfile\n                                    \n                                    \n                                        Public getAccessToken\n                                    \n                                    \n                                        Public getAccessTokenExpiration\n                                    \n                                    \n                                        Public getIdentityClaims\n                                    \n                                    \n                                        Public getIdToken\n                                    \n                                    \n                                        Public getIdTokenExpiration\n                                    \n                                    \n                                        Public hasValidAccessToken\n                                    \n                                    \n                                        Public hasValidIdToken\n                                    \n                                    \n                                        Public initImplicitFlow\n                                    \n                                    \n                                        Public loadDiscoveryDocument\n                                    \n                                    \n                                        Public loadDiscoveryDocumentAndTryLogin\n                                    \n                                    \n                                        Public loadUserProfile\n                                    \n                                    \n                                        Public logOut\n                                    \n                                    \n                                        Public processIdToken\n                                    \n                                    \n                                        Public refreshToken\n                                    \n                                    \n                                        Public setStorage\n                                    \n                                    \n                                        Public setupAutomaticSiletRefresh\n                                    \n                                    \n                                        Public silentRefresh\n                                    \n                                    \n                                        Protected storeIdToken\n                                    \n                                    \n                                        Public tryLogin\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: Http, storage: OAuthStorage, tokenValidationHandler: ValidationHandler, urlHelper: UrlHelperService)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:267\n                                        \n                                    \n            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public authorizationHeader\n                                \n                            \n                            \n                                \n                                        \n                                    authorizationHeader()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1268\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the auth-header that can be used\n            to transmit the access_token to a service\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public configure\n                                \n                            \n                            \n                                \n                                        \n                                    configure(config: AuthConfig)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:296\n                                        \n                                    \n            \n                            \n                                \n                                        Use this method to configure the service\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                              \n                                                              the configuration\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public createAndSaveNonce\n                                \n                            \n                            \n                                \n                                        \n                                    createAndSaveNonce()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1312\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected createNonce\n                                \n                            \n                            \n                                \n                                        \n                                    createNonce()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1320\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public fetchTokenUsingPasswordFlow\n                                \n                            \n                            \n                                \n                                        \n                                    fetchTokenUsingPasswordFlow(userName: string, password: string, headers: Headers)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:647\n                                        \n                                    \n            \n                            \n                                \n                                        Uses password flow to exchange userName and password for an access_token.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              userName\n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              password\n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                              \n                                                              Optional additional http-headers.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public fetchTokenUsingPasswordFlowAndLoadUserProfile\n                                \n                            \n                            \n                                \n                                        \n                                    fetchTokenUsingPasswordFlowAndLoadUserProfile(userName: string, password: string, headers: Headers)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:589\n                                        \n                                    \n            \n                            \n                                \n                                        Uses password flow to exchange userName and password for an\n            access_token. After receiving the access_token, this method\n            uses it to query the userinfo endpoint in order to get information\n            about the user in question.\n            When using this, make sure that the property oidc is set to false.\n            Otherwise stricter validations take happen that makes this operation\n            fail.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              userName\n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              password\n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              headers\n                                                              \n                                                              \n                                                              Optional additional http-headers.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getAccessToken\n                                \n                            \n                            \n                                \n                                        \n                                    getAccessToken()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1208\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the current access_token.\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getAccessTokenExpiration\n                                \n                            \n                            \n                                \n                                        \n                                    getAccessTokenExpiration()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1216\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the expiration date of the access_token\n            as milliseconds since 1970.\n            \n            \n                                        \n                                            Returns :     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getIdentityClaims\n                                \n                            \n                            \n                                \n                                        \n                                    getIdentityClaims()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1185\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the received claims about the user.\n            \n            \n                                        \n                                            Returns :     object\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getIdToken\n                                \n                            \n                            \n                                \n                                        \n                                    getIdToken()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1194\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the current id_token.\n            \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getIdTokenExpiration\n                                \n                            \n                            \n                                \n                                        \n                                    getIdTokenExpiration()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1224\n                                        \n                                    \n            \n                            \n                                \n                                        Returns the expiration date of the id_token\n            as milliseconds since 1970.\n            \n            \n                                        \n                                            Returns :     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public hasValidAccessToken\n                                \n                            \n                            \n                                \n                                        \n                                    hasValidAccessToken()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1231\n                                        \n                                    \n            \n                            \n                                \n                                        Checkes, whether there is a valid access_token.\n            \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public hasValidIdToken\n                                \n                            \n                            \n                                \n                                        \n                                    hasValidIdToken()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1249\n                                        \n                                    \n            \n                            \n                                \n                                        Checkes, whether there is a valid id_token.\n            \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public initImplicitFlow\n                                \n                            \n                            \n                                \n                                        \n                                    initImplicitFlow(additionalState: , loginHint: )\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:913\n                                        \n                                    \n            \n                            \n                                \n                                        Starts the implicit flow and redirects to user to\n            the auth servers login url. \n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              additionalState\n                                                              \n                                                              \n                                                              Optinal state that is passes around. You find this state in the property state after tryLogin logged in the user.\n            \n                                                            \n                                                            \n                                                              loginHint\n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public loadDiscoveryDocument\n                                \n                            \n                            \n                                \n                                        \n                                    loadDiscoveryDocument(fullUrl: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:455\n                                        \n                                    \n            \n                            \n                                \n                                        Loads the discovery document to configure most\n            properties of this service. The url of the discovery\n            document is infered from the issuer's url according\n            to the OpenId Connect spec. To use another url you\n            can pass it to to optional parameter fullUrl.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              fullUrl\n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public loadDiscoveryDocumentAndTryLogin\n                                \n                            \n                            \n                                \n                                        \n                                    loadDiscoveryDocumentAndTryLogin()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:309\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public loadUserProfile\n                                \n                            \n                            \n                                \n                                        \n                                    loadUserProfile()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:602\n                                        \n                                    \n            \n                            \n                                \n                                        Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\n            When using this with OAuth2 password flow, make sure that the property oidc is set to false.\n            Otherwise stricter validations take happen that makes this operation\n            fail.\n            \n            \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public logOut\n                                \n                            \n                            \n                                \n                                        \n                                    logOut(noRedirectToLogoutUrl: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1278\n                                        \n                                    \n            \n                            \n                                \n                                        Removes all tokens and logs the user out.\n            If a logout url is configured, the user is \n            redirected to it.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              noRedirectToLogoutUrl\n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public processIdToken\n                                \n                            \n                            \n                                \n                                        \n                                    processIdToken(idToken: string, accessToken: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1074\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                        \n                                        \n                                            Returns :     Promise<>\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public refreshToken\n                                \n                            \n                            \n                                \n                                        \n                                    refreshToken()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:692\n                                        \n                                    \n            \n                            \n                                \n                                        Refreshes the token using a refresh_token.\n            This does not work for implicit flow, b/c\n            there is no refresh_token in this flow.\n            A solution for this is provided by the\n            method silentRefresh.\n            \n            \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public setStorage\n                                \n                            \n                            \n                                \n                                        \n                                    setStorage(storage: OAuthStorage)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:442\n                                        \n                                    \n            \n                            \n                                \n                                        Sets a custom storage used to store the received\n            tokens on client side. By default, the browser's\n            sessionStorage is used.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              storage\n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public setupAutomaticSiletRefresh\n                                \n                            \n                            \n                                \n                                        \n                                    setupAutomaticSiletRefresh()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:300\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public silentRefresh\n                                \n                            \n                            \n                                \n                                        \n                                    silentRefresh()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:776\n                                        \n                                    \n            \n                            \n                                \n                                        Performs a silent refresh for implicit flow.\n            Use this method to get a new tokens when/ before \n            the existing tokens expires.\n            \n            \n                                        \n                                            Returns :     Promise<>\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected storeIdToken\n                                \n                            \n                            \n                                \n                                        \n                                    storeIdToken(idToken: ParsedIdToken)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:1058\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public tryLogin\n                                \n                            \n                            \n                                \n                                        \n                                    tryLogin(options: LoginOptions)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:966\n                                        \n                                    \n            \n                            \n                                \n                                        Checks whether there are tokens in the hash fragment\n            as a result of the implicit flow. These tokens are\n            parsed, validated and used to sign the user in to the\n            current client.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              options\n                                                              \n                                                              \n                                                              Optinal options.\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public events\n                                \n                            \n                            \n                                \n                                    events:     Observable\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Observable\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:242\n                                        \n                                    \n            \n                            \n                                \n                                    Informs about events, like token_received or token_expires.\n            See the string enum EventType for a full list of events.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public state\n                                \n                            \n                            \n                                \n                                    state:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:93\n                                        \n                                    \n            \n                            \n                                \n                                    The received (passed around) state, when logging\n            in with implicit flow.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public tokenValidationHandler\n                                \n                            \n                            \n                                \n                                    tokenValidationHandler:     ValidationHandler\n            \n                                \n                            \n                                \n                                    \n                                        Type :     ValidationHandler\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/oauth-service.ts:187\n                                        \n                                    \n            \n                            \n                                \n                                    The ValidationHandler used to validate received\n            id_tokens.\n            \n                                \n                            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { AuthConfig, defaultConfig } from './config';\nimport { Http, URLSearchParams, Headers } from '@angular/http';\nimport { Injectable, Optional } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ValidationHandler, ValidationParams } from \"./token-validation/validation-handler\";\nimport { NullValidationHandler } from \"./token-validation/null-validation-handler\";\nimport { UrlHelperService } from \"./url-helper.service\";\nimport { Subscription } from \"rxjs/Subscription\";\nimport { OAuthEvent, OAuthInfoEvent, OAuthErrorEvent, OAuthSuccessEvent } from \"./events\";\nimport { OAuthStorage, LoginOptions, ParsedIdToken } from \"./types\";\nimport { b64DecodeUnicode } from \"./base64-helper\";\n\n/**\n * Service for logging in and logging out with\n * OIDC and OAuth2. Supports implicit flow and\n * password flow.\n */\n@Injectable()\nexport class OAuthService {\n\n    /**\n     * The client's id as registered with the auth server\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public clientId = \"\";\n\n    /**\n     * The client's redirectUri as registered with the auth server\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public redirectUri = \"\";\n\n    /**\n     * An optional second redirectUri where the auth server\n     * redirects the user to after logging out.\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public postLogoutRedirectUri = \"\";\n\n    /**\n     * The auth server's endpoint that allows to log\n     * the user in when using implicit flow.\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     * \n     */\n    public loginUrl = \"\";\n\n    /**\n     * The requested scopes\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     * \n     */\n    public scope = \"openid profile\";\n\n    /**\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public resource = \"\";\n    \n    /**\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public rngUrl = \"\";\n\n    /**\n     * Defines whether to use OpenId Connect during\n     * implicit flow.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public oidc: boolean = true;\n\n    /**\n     * Defines whether to request a access token during\n     * implicit flow.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public requestAccessToken: boolean = true;\n\n    /**\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public options: any;\n    \n    /**\n     * The received (passed around) state, when logging\n     * in with implicit flow.\n     */\n    public state = \"\";\n\n    /**\n     * The issuer's uri.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public issuer = \"\";\n\n    /**\n     * The logout url.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public logoutUrl = \"\";\n\n    /**\n     * Defines whether to clear the hash fragment after logging in.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public clearHashAfterLogin: boolean = true;\n\n    /**\n     * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public tokenEndpoint: string;\n\n    /**\n     * Url of the userinfo endpoint as defined by OpenId Connect.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     * \n     */\n    public userinfoEndpoint: string;\n\n    /**\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public responseType: string = \"token\";\n\n    /**\n     * Defines whether additional debug information should \n     * be shown at the console.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public showDebugInformation: boolean = false;\n\n    /**\n     * The redirect uri used when doing silent refresh.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public silentRefreshRedirectUri: string = '';\n\n    /**\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n    */\n    public silentRefreshMessagePrefix: string = '';\n\n    /**\n     * Set this to true to display the iframe used for \n     * silent refresh for debugging.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public silentRefreshShowIFrame: boolean = false;\n    \n    /**\n     * Timeout for silent refresh. \n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public siletRefreshTimeout: number = 1000 * 20; \n\n    /**\n     * Some auth servers don't allow using password flow\n     * w/o a client secreat while the standards do not\n     * demand for it. In this case, you can set a password\n     * here. As this passwort is exposed to the public\n     * it does not bring additional security and is therefore\n     * as good as using no password.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public dummyClientSecret: string;\n\n    /**\n     * The ValidationHandler used to validate received\n     * id_tokens.\n     */\n    public tokenValidationHandler: ValidationHandler;\n\n    /**\n     * Defines whether https is required.\n     * The default value is remoteOnly which only allows\n     * http for location, while every other domains need\n     * to be used with https.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public requireHttps: boolean | 'remoteOnly' = 'remoteOnly';\n    \n    /**\n     * Defines whether every url provided by the discovery \n     * document has to start with the issuer's url.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public strictDiscoveryDocumentValidation: boolean = true;\n\n    /**\n     * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\n     * with keys used to validate received id_tokens.\n     * This is taken out of the disovery document. Can be set manually too.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public jwks: object;\n\n    /**\n     * Map with additional query parameter that are appended to\n     * the request when initializing implicit flow.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public customQueryParams: object;\n\n    /**\n     * @internal\n     * Deprecated:  use property events instead\n     */\n    public discoveryDocumentLoaded: boolean = false;\n  \n    /**\n     * @internal\n     * Deprecated:  use property events instead\n     */\n    public discoveryDocumentLoaded$: Observable;\n    \n    private discoveryDocumentLoadedSubject: Subject = new Subject();\n\n    /**\n     * Informs about events, like token_received or token_expires.\n     * See the string enum EventType for a full list of events.\n     */\n    public events: Observable;\n    private eventsSubject: Subject = new Subject();\n\n    /**\n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public silentRefreshIFrameName: string = 'angular-oauth-oidc-silent-refresh-iframe';\n    \n    private silentRefreshPostMessageEventListener: EventListener;\n\n    private grantTypesSupported: Array = [];\n    private _storage: OAuthStorage;\n\n    /**\n     * Defines when the token_timeout event should be raised.\n     * If you set this to the default value 0.75, the event\n     * is triggered after 75% of the token's life time.\n     * \n     * @internal Use method configure instead. However, this is still supported to avoid braking existing code.\n     */\n    public timeoutFactor: number = 0.75;\n\n    private accessTokenTimeoutSubscription: Subscription;\n    private idTokenTimeoutSubscription: Subscription;\n\n    private jwksUri: string;\n\n    constructor(\n        private http: Http,\n        @Optional() storage: OAuthStorage,\n        @Optional() tokenValidationHandler: ValidationHandler,\n        private urlHelper: UrlHelperService) {\n     \n        this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\n        this.events = this.eventsSubject.asObservable();\n\n        if (tokenValidationHandler) {\n            this.tokenValidationHandler = tokenValidationHandler;\n        }\n        \n        if (storage) {\n            this.setStorage(storage);\n        }\n        else if (typeof sessionStorage !== 'undefined') {\n            this.setStorage(sessionStorage);\n        }\n\n        this.setupTimer();\n    }\n\n    /**\n     * Use this method to configure the service\n     * @param config the configuration\n     */\n    public configure(config: AuthConfig) {\n        Object.assign(this, defaultConfig, config);\n    }\n\n    public setupAutomaticSiletRefresh() {\n        this\n        .events\n        .filter(e => e.type == 'token_expires')\n        .subscribe(e => {\n          this.silentRefresh();\n        });\n    }\n\n    public loadDiscoveryDocumentAndTryLogin() {\n        this.loadDiscoveryDocument().then((doc) => {\n            this.tryLogin();\n        });\n    }\n    \n    private getKeyCount(): number {\n        if (!this.jwks) return 0;\n        if (!this.jwks['keys']) return 0;\n        return this.jwks['keys'].length;\n    }\n\n\n    private debug(...args): void {\n        if (this.showDebugInformation) {\n            console.debug.apply(console, args);\n        }\n    }\n\n    private validateUrlFromDiscoveryDocument(url: string): string[] {\n\n        let errors: string[] = [];\n        let httpsCheck = this.validateUrlForHttps(url);\n        let issuerCheck = this.validateUrlAgainstIssuer(url);\n\n        if (!httpsCheck) {\n            errors.push('https for all urls required. Also for urls received by discovery.');\n        }\n\n        if (!issuerCheck) {\n            errors.push('Every url in discovery document has to start with the issuer url. Also see property strictDiscoveryDocumentValidation.');\n        }\n\n        return errors;\n    }\n\n    private validateUrlForHttps(url: string): boolean {\n        \n        if (!url) return true;\n        \n        let lcUrl = url.toLowerCase();\n        \n        if (this.requireHttps == false) return true;\n\n        if ((lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) \n            || lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/))\n            && this.requireHttps == 'remoteOnly') {\n                return true;\n        }\n\n        return lcUrl.startsWith('https://');\n    }\n\n    private validateUrlAgainstIssuer(url: string) {\n        if (!this.strictDiscoveryDocumentValidation) return true;\n        if (!url) return true;\n        return url.toLowerCase().startsWith(this.issuer.toLowerCase());\n    }\n\n    private setupTimer(): void {\n        \n        if (typeof window === 'undefined') {\n            this.debug('timer not supported on this plattform')\n            return;\n        } \n\n        this.events.filter(e => e.type == 'token_received').subscribe(_ => {\n            \n            this.clearAccessTokenTimer();\n            this.clearIdTokenTimer();\n\n            let now = Date.now();\n\n            if (this.hasValidAccessToken()) {\n                this.setupAccessTokenTimer();\n            }\n\n            if (this.hasValidIdToken()) {\n                this.setupIdTokenTimer();\n            }\n\n        });\n    }\n\n    private setupAccessTokenTimer(): void {\n        let expiration = this.getAccessTokenExpiration();\n        let timeout = this.calcTimeout(expiration);\n        \n        this.accessTokenTimeoutSubscription = \n            Observable\n                .of(new OAuthInfoEvent('token_expires', 'access_token'))\n                .delay(timeout)\n                .subscribe(e => this.eventsSubject.next(e));\n    }\n\n\n    private setupIdTokenTimer(): void {\n        let expiration = this.getAccessTokenExpiration();\n        let timeout = this.calcTimeout(expiration);\n        \n        this.accessTokenTimeoutSubscription = \n            Observable\n                .of(new OAuthInfoEvent('token_expires', 'id_token'))\n                .delay(timeout)\n                .subscribe(e => this.eventsSubject.next(e));\n    }\n\n    private clearAccessTokenTimer(): void {\n        if (this.accessTokenTimeoutSubscription) {\n            this.accessTokenTimeoutSubscription.unsubscribe();\n        }\n    }\n\n    private clearIdTokenTimer(): void {\n        if (this.idTokenTimeoutSubscription) {\n            this.idTokenTimeoutSubscription.unsubscribe();\n        }\n    }\n\n    private calcTimeout(expiration: number): number {\n        let now = Date.now();\n        let delta = (expiration - now) * this.timeoutFactor;\n        // let timeout = now + delta;\n        return delta;\n    }\n\n    /**\n     * Sets a custom storage used to store the received\n     * tokens on client side. By default, the browser's\n     * sessionStorage is used.\n     * \n     * @param storage \n     */\n    public setStorage(storage: OAuthStorage): void {\n        this._storage = storage;\n    }\n\n    /**\n     * Loads the discovery document to configure most\n     * properties of this service. The url of the discovery\n     * document is infered from the issuer's url according\n     * to the OpenId Connect spec. To use another url you\n     * can pass it to to optional parameter fullUrl.\n     * \n     * @param fullUrl \n     */\n    public loadDiscoveryDocument(fullUrl: string = null): Promise {\n\n        return new Promise((resolve, reject) => {\n\n            if (!fullUrl) {\n                fullUrl = this.issuer + '/.well-known/openid-configuration';\n            }\n\n            if (!this.validateUrlForHttps(fullUrl)) {\n                reject('loginUrl must use Http. Also check property requireHttps.');\n                return;\n            }\n    \n            this.http.get(fullUrl).map(r => r.json()).subscribe(\n                (doc) => {\n\n                    if (!this.validateDiscoveryDocument(doc)) {\n                        this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\n                        reject('discovery_document_validation_error');\n                        return;\n                    }\n\n                    this.loginUrl = doc.authorization_endpoint;\n                    this.logoutUrl = doc.end_session_endpoint;\n                    this.grantTypesSupported = doc.grant_types_supported;\n                    this.issuer = doc.issuer;\n                    this.tokenEndpoint = doc.token_endpoint;\n                    this.userinfoEndpoint = doc.userinfo_endpoint;\n                    this.jwksUri = doc.jwks_uri;\n                    this.discoveryDocumentLoaded = true;\n                    this.discoveryDocumentLoadedSubject.next(doc);\n\n                    this.loadJwks().then(_ => {\n                        let result = new OAuthSuccessEvent('discovery_document_loaded');\n                        this.eventsSubject.next(result);\n                        resolve(result);\n                        return;\n                    }).catch(err => {\n                        this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n                        reject(err);\n                        return;\n                    });\n                },\n                (err) => {\n                    console.error('error loading dicovery document', err);\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n                    reject(err);\n                }\n            );\n        });\n    }\n\n    private loadJwks(): Promise {\n        return new Promise((resolve, reject) => {\n            if (this.jwksUri) {\n                this.http.get(this.jwksUri).map(r => r.json()).subscribe(\n                    jwks => {\n                        this.jwks = jwks;\n                        this.eventsSubject.next(new OAuthSuccessEvent('discovery_document_loaded'));\n                        resolve(jwks);\n                    },\n                    err => {\n                        console.error('error loading jwks', err);\n                        this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\n                        reject(err);\n                    }\n                )\n            }\n            else {\n                resolve(null);\n            }\n        });\n\n    }\n\n    private validateDiscoveryDocument(doc: object): boolean {\n\n        let errors: string[];\n\n        if (doc['issuer'] != this.issuer) {\n            console.error(\n                'invalid issuer in discovery document',\n                'expected: ' + this.issuer,\n                'current: ' + doc['issuer']\n            );\n            return false;\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc['authorization_endpoint']);\n        if (errors.length > 0) {\n            console.error('error validating authorization_endpoint in discovery document', errors);\n            return false;\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc['end_session_endpoint']);\n        if (errors.length > 0) {\n            console.error('error validating end_session_endpoint in discovery document', errors);\n            return false;\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc['token_endpoint']);\n        if (errors.length > 0) {\n            console.error('error validating token_endpoint in discovery document', errors);\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc['userinfo_endpoint']);\n        if (errors.length > 0) {\n            console.error('error validating userinfo_endpoint in discovery document', errors);\n            return false;\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc['jwks_uri']);\n        if (errors.length > 0) {\n            console.error('error validating jwks_uri in discovery document', errors);\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Uses password flow to exchange userName and password for an\n     * access_token. After receiving the access_token, this method\n     * uses it to query the userinfo endpoint in order to get information\n     * about the user in question.\n     * \n     * When using this, make sure that the property oidc is set to false.\n     * Otherwise stricter validations take happen that makes this operation\n     * fail.\n     * \n     * @param userName \n     * @param password \n     * @param headers Optional additional http-headers.\n     */\n    public fetchTokenUsingPasswordFlowAndLoadUserProfile(userName: string, password: string, headers: Headers = new Headers()): Promise {\n        return this\n                .fetchTokenUsingPasswordFlow(userName, password, headers)\n                .then(() => this.loadUserProfile());\n    }\n\n    /**\n     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\n     * \n     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\n     * Otherwise stricter validations take happen that makes this operation\n     * fail.\n     */\n    public loadUserProfile(): Promise {\n        if (!this.hasValidAccessToken()) throw new Error(\"Can not load User Profile without access_token\");\n        if (!this.validateUrlForHttps(this.userinfoEndpoint)) throw new Error('userinfoEndpoint must use Http. Also check property requireHttps.');\n        \n        return new Promise((resolve, reject) => {\n\n            let headers = new Headers();\n            headers.set('Authorization', 'Bearer ' + this.getAccessToken());\n\n            this.http.get(this.userinfoEndpoint, { headers }).map(r => r.json()).subscribe(\n                (doc) => {\n                    this.debug('userinfo received', doc);\n\n                    let existingClaims = this.getIdentityClaims() || {};\n                    if (this.oidc && (!existingClaims['sub'] || doc.sub != existingClaims['sub'])) {\n                        let err = 'if property oidc is true, the received user-id (sub) has to be the user-id of the user that has logged in with oidc.\\n'\n                                    + 'if you are not using oidc but just oauth2 password flow set oidc to false';\n\n                        reject(err);\n                        return;\n                    }\n\n                    doc = Object.assign({}, existingClaims, doc);\n\n                    this._storage.setItem('id_token_claims_obj', JSON.stringify(doc));\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n                    resolve(doc);\n                },\n                (err) => {\n                    console.error('error loading user info', err);\n                    this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\n                    reject(err);\n                }\n            );\n        });\n\n\n    }\n\n    /**\n     * Uses password flow to exchange userName and password for an access_token.\n     * @param userName \n     * @param password \n     * @param headers Optional additional http-headers.\n     */\n    public fetchTokenUsingPasswordFlow(userName: string, password: string, headers: Headers = new Headers()): Promise {\n\n        if (!this.validateUrlForHttps(this.tokenEndpoint)) throw new Error('tokenEndpoint must use Http. Also check property requireHttps.');\n\n        return new Promise((resolve, reject) => { \n            let search = new URLSearchParams();\n            search.set('grant_type', 'password');\n            search.set('client_id', this.clientId);\n            search.set('scope', this.scope);\n            search.set('username', userName);\n            search.set('password', password);\n            \n            if (this.dummyClientSecret) {\n                search.set('client_secret', this.dummyClientSecret);\n            }\n\n            headers.set('Content-Type', 'application/x-www-form-urlencoded');\n\n            let params = search.toString();\n\n            this.http.post(this.tokenEndpoint, params, { headers }).map(r => r.json()).subscribe(\n                (tokenResponse) => {\n                    this.debug('tokenResponse', tokenResponse);\n                    this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in);\n\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                    resolve(tokenResponse);\n                },\n                (err) => {\n                    console.error('Error performing password flow', err);\n                    this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\n                    reject(err);\n                }\n            );\n        });\n\n    }\n\n    /**\n     * Refreshes the token using a refresh_token.\n     * This does not work for implicit flow, b/c\n     * there is no refresh_token in this flow.\n     * A solution for this is provided by the\n     * method silentRefresh.\n     */\n    public refreshToken(): Promise {\n\n        if (!this.validateUrlForHttps(this.tokenEndpoint)) throw new Error('tokenEndpoint must use Http. Also check property requireHttps.');\n\n        return new Promise((resolve, reject) => { \n            let search = new URLSearchParams();\n            search.set('grant_type', 'refresh_token');\n            search.set('client_id', this.clientId);\n            search.set('scope', this.scope);\n            search.set('refresh_token', this._storage.getItem('refresh_token'));\n            \n            if (this.dummyClientSecret) {\n                search.set('client_secret', this.dummyClientSecret);\n            }\n\n            let headers = new Headers();\n            headers.set('Content-Type', 'application/x-www-form-urlencoded');\n\n            let params = search.toString();\n\n            this.http.post(this.tokenEndpoint, params, { headers }).map(r => r.json()).subscribe(\n                (tokenResponse) => {\n                    this.debug('refresh tokenResponse', tokenResponse);\n                    this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in);\n                    \n                    this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n                    resolve(tokenResponse);\n                },\n                (err) => {\n                    console.error('Error performing password flow', err);\n                    this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n                    reject(err);\n                }\n            );\n        });\n    }\n\n    private removeSilentRefreshEventListener(): void {\n        if (this.silentRefreshPostMessageEventListener) {\n            window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\n            this.silentRefreshPostMessageEventListener = null;\n        }\n    }\n\n    private setupSilentRefreshEventListener(): void {\n        this.removeSilentRefreshEventListener();\n        \n        this.silentRefreshPostMessageEventListener = (e: MessageEvent) => {\n\n            let expectedPrefix = '#';\n\n            if (this.silentRefreshMessagePrefix) {\n                expectedPrefix += this.silentRefreshMessagePrefix;\n            }\n\n            if (!e || !e.data || typeof e.data != 'string' ) return;\n            \n            let prefixedMessage: string = e.data;\n\n            if (!prefixedMessage.startsWith(expectedPrefix)) return;\n\n            let message = '#' + prefixedMessage.substr(expectedPrefix.length);\n\n            this.tryLogin({\n                customHashFragment: message,\n                onLoginError: (err) => {\n                    this.eventsSubject.next(new OAuthErrorEvent('silent_refresh_error', err));\n                },\n                onTokenReceived: () => {\n                    this.eventsSubject.next(new OAuthSuccessEvent('silently_refreshed'));\n                }\n            });\n        }\n\n        window.addEventListener('message', this.silentRefreshPostMessageEventListener);\n    }\n\n    \n    /**\n     * Performs a silent refresh for implicit flow.\n     * Use this method to get a new tokens when/ before \n     * the existing tokens expires.\n     */\n    public silentRefresh(): Promise {\n        \n        if (!this.validateUrlForHttps(this.loginUrl)) throw new Error('tokenEndpoint must use Http. Also check property requireHttps.');\n\n        if (!document) {\n            throw new Error('silent refresh is not supported on this platform');\n        } \n\n        let existingIframe = document.getElementById(this.silentRefreshIFrameName);\n        if (existingIframe) {\n            document.body.removeChild(existingIframe);\n        }\n\n        let iframe = document.createElement('iframe');\n        iframe.id = this.silentRefreshIFrameName;\n\n        this.setupSilentRefreshEventListener();\n\n        let redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\n        this.createLoginUrl(null, null, redirectUri).then(url => {\n            iframe.setAttribute('src', url);\n            if (!this.silentRefreshShowIFrame) {\n               iframe.style.visibility = 'hidden';\n            }\n            document.body.appendChild(iframe);\n        });\n\n        let errors = this.events.filter(e => e instanceof OAuthErrorEvent).first();\n        let success = this.events.filter(e => e.type == 'silently_refreshed').first();\n        let timeout = Observable.of(new OAuthErrorEvent('silent_refresh_timeout', null))\n                                .delay(this.siletRefreshTimeout);\n\n        return Observable\n                .race([errors, success, timeout])\n                .do(e => {\n                    if (e.type == 'silent_refresh_timeout') {\n                        this.eventsSubject.next(e);\n                    }\n                })\n                .map(e => {\n                    if (e instanceof OAuthErrorEvent) {\n                        throw e;\n                    }\n                    return e;\n                })\n                .toPromise();\n    }\n    \n    private createLoginUrl(\n        state: string = '', \n        loginHint: string = '',\n        customRedirectUri: string = ''\n    ) {\n        var that = this;\n\n        let redirectUri: string;\n\n        if (customRedirectUri) {\n            redirectUri = customRedirectUri;\n        }\n        else {\n            redirectUri = this.redirectUri;\n        }\n\n        return this.createAndSaveNonce().then((nonce: any) => {\n\n            if (state) {\n                state = nonce + \";\" + state;\n            }\n            else {\n                state = nonce;   \n            }\n\n            if (!this.requestAccessToken && !this.oidc) {\n                throw new Error('Either requestAccessToken or oidc or both must be true');\n            }\n\n            if (this.oidc && this.requestAccessToken) {\n                this.responseType = \"id_token token\";\n            }\n            else if (this.oidc && !this.requestAccessToken) {\n                this.responseType = 'id_token'\n            }\n            else {\n                this.responseType = 'token';\n            }\n\n            let seperationChar = (that.loginUrl.indexOf('?') > -1) ? '&' : '?';\n\n            let scope = that.scope;\n\n            if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\n                scope = 'openid ' + scope;\n            }\n\n            var url = that.loginUrl \n                        + seperationChar\n                        + \"response_type=\"\n                        + encodeURIComponent(that.responseType)\n                        + \"&client_id=\"\n                        + encodeURIComponent(that.clientId)\n                        + \"&state=\" \n                        + encodeURIComponent(state)\n                        + \"&redirect_uri=\" \n                        + encodeURIComponent(redirectUri) \n                        + \"&scope=\" \n                        + encodeURIComponent(scope);\n            \n            if (loginHint) {\n                url += \"&login_hint=\" + encodeURIComponent(loginHint);\n            }\n\n            if (that.resource) {\n                url += \"&resource=\" + encodeURIComponent(that.resource);\n            }\n            \n            if (that.oidc) {\n                url += \"&nonce=\" + encodeURIComponent(nonce);\n            }\n\n            if (this.customQueryParams) {\n                for(let key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                    url += \"&\" + key + \"=\" + encodeURIComponent(this.customQueryParams[key]);\n                }\n            }\n            \n            return url;\n        });\n    };\n\n    /**\n     * Starts the implicit flow and redirects to user to\n     * the auth servers login url. \n     * \n     * @param additionalState Optinal state that is passes around. You find this state in the property ``state`` after ``tryLogin`` logged in the user.\n     * @param loginHint \n     */\n    public initImplicitFlow(additionalState = \"\", loginHint=\"\"): void {\n        \n        if (!this.validateUrlForHttps(this.loginUrl)) {\n            throw new Error('loginUrl must use Http. Also check property requireHttps.');\n        }\n\n        this.createLoginUrl(additionalState, loginHint).then(function (url) {\n            location.href = url;\n        })\n        .catch(error => {\n            console.error(\"Error in initImplicitFlow\");\n            console.error(error);\n        });\n    };\n    \n    private callOnTokenReceivedIfExists(options: LoginOptions): void {\n        var that = this;\n        if (options.onTokenReceived) {\n            var tokenParams = { \n                idClaims: that.getIdentityClaims(),\n                idToken: that.getIdToken(),\n                accessToken: that.getAccessToken(),\n                state: that.state\n            };\n            options.onTokenReceived(tokenParams);\n        }\n    }\n\n    private storeAccessTokenResponse(accessToken: string, refreshToken: string, expiresIn: number): void {\n        this._storage.setItem(\"access_token\", accessToken);\n\n        if (expiresIn) {\n            var expiresInMilliSeconds = expiresIn * 1000;\n            var now = new Date();\n            var expiresAt = now.getTime() + expiresInMilliSeconds;\n            this._storage.setItem(\"expires_at\", \"\" + expiresAt);\n        }\n\n        if (refreshToken) {\n            this._storage.setItem(\"refresh_token\", refreshToken);\n        }\n    }\n\n    private receivedFirstToken = true;\n\n    /**\n     * Checks whether there are tokens in the hash fragment\n     * as a result of the implicit flow. These tokens are\n     * parsed, validated and used to sign the user in to the\n     * current client.\n     * \n     * @param options Optinal options.\n     */\n    public tryLogin(options: LoginOptions = null): Promise {\n        \n        options = options || { };\n            \n        let parts: object;\n\n        if (options.customHashFragment) {\n            parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\n        }\n        else {\n            parts = this.urlHelper.getHashFragmentParams();\n        }\n\n        if (parts[\"error\"]) {\n            this.debug('error trying to login');\n            this.handleLoginError(options, parts);\n            let err = new OAuthErrorEvent('token_error', {}, parts);\n            this.eventsSubject.next(err);\n            return Promise.reject(err);\n        }\n\n        var accessToken = parts[\"access_token\"];\n        var idToken = parts[\"id_token\"];\n        var state = decodeURIComponent(parts[\"state\"]);\n        \n        if (!this.requestAccessToken && !this.oidc) {\n            return Promise.reject('Either requestAccessToken or oidc or both must be true.');\n        }\n\n        if (this.requestAccessToken && !accessToken) return Promise.resolve();\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) return Promise.resolve();\n        if (this.oidc && !idToken) return Promise.resolve();\n        \n        var stateParts = state.split(';');\n        if (stateParts.length > 1) {\n            this.state = stateParts[1];\n        }\n        var nonceInState = stateParts[0];\n\n\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck) {\n            let success = this.validateNonceForAccessToken(accessToken, nonceInState);\n            if (!success) {\n                let event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n                this.eventsSubject.next(event);\n                return Promise.reject(event);\n            }\n        }\n\n        if (this.requestAccessToken) {\n            this.storeAccessTokenResponse(accessToken, null, parts['expires_in']);\n        }\n\n        if (!this.oidc) return Promise.resolve();\n\n        return this\n                .processIdToken(idToken, accessToken)\n                .then(result => {\n                    if (options.validationHandler) {\n                        return options.validationHandler({\n                            accessToken: accessToken,\n                            idClaims: result.idTokenClaims,\n                            idToken: result.idToken,\n                            state: state\n                        }).then(_ => result);\n                    }\n                    return result;\n                })\n                .then(result => {\n                        this.storeIdToken(result);\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                        this.callOnTokenReceivedIfExists(options);\n                        if (this.clearHashAfterLogin) location.hash = '';\n                    })\n                .catch(reason => {\n                    this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n                    console.error('Error validating tokens');\n                    console.error(reason);\n                });\n        \n    };\n\n    private validateNonceForAccessToken(accessToken: string, nonceInState: string): boolean {\n        var savedNonce = this._storage.getItem(\"nonce\");\n        if (savedNonce !== nonceInState) {\n            let err = 'validating access_token failed. wrong state/nonce.';\n            console.error(err, savedNonce, nonceInState);\n            return false;\n        }\n        return true;\n    }\n\n    protected storeIdToken(idToken: ParsedIdToken) {\n        this._storage.setItem(\"id_token\", idToken.idToken);\n        this._storage.setItem(\"id_token_claims_obj\", idToken.idTokenClaimsJson);\n        this._storage.setItem(\"id_token_expires_at\", \"\" + idToken.idTokenExpiresAt);\n    }\n\n    private handleLoginError(options: LoginOptions, parts: object): void {\n        var savedNonce = this._storage.getItem(\"nonce\");\n        if (options.onLoginError) \n            options.onLoginError(parts)\n        if (this.clearHashAfterLogin) location.hash = '';\n    }\n    \n    /**\n     * @ignore\n     */\n    public processIdToken(idToken: string, accessToken: string): Promise  {\n            \n            let tokenParts = idToken.split(\".\");\n            let headerBase64 = this.padBase64(tokenParts[0]);\n            let headerJson = b64DecodeUnicode(headerBase64);\n            let header = JSON.parse(headerJson);\n            let claimsBase64 = this.padBase64(tokenParts[1]);\n            let claimsJson = b64DecodeUnicode(claimsBase64);\n            let claims = JSON.parse(claimsJson);\n            let savedNonce = this._storage.getItem(\"nonce\");\n            \n            if (Array.isArray(claims.aud)) {\n                if (claims.aud.every(v => v !== this.clientId)) {\n                    let err = \"Wrong audience: \" + claims.aud.join(\",\");\n                    console.warn(err);\n                    return Promise.reject(err);\n                }\n            } else {\n                if (claims.aud !== this.clientId) {\n                    let err = \"Wrong audience: \" + claims.aud;\n                    console.warn(err);\n                    return Promise.reject(err);\n                }\n            }\n\n            /*            \n            if (this.getKeyCount() > 1 && !header.kid) {\n                let err = 'There needs to be a kid property in the id_token header when multiple keys are defined via the property jwks';\n                console.warn(err);\n                return Promise.reject(err);\n            }\n            */\n\n            if (!claims.sub) {\n                let err = \"No sub claim in id_token\";\n                console.warn(err);\n                return Promise.reject(err);\n            }\n\n            if (!claims.iat) {\n                let err = \"No iat claim in id_token\";\n                console.warn(err);\n                return Promise.reject(err);\n            }\n\n            if (claims.iss !== this.issuer) {\n                let err = \"Wrong issuer: \" + claims.iss;\n                console.warn(err);\n                return Promise.reject(err);\n            }\n\n            if (claims.nonce !== savedNonce) {\n                let err = \"Wrong nonce: \" + claims.nonce;\n                console.warn(err);\n                return Promise.reject(err);\n            }\n\n            if (this.requestAccessToken && !claims['at_hash']) {\n                let err = \"An at_hash is needed!\"\n                console.warn(err);\n                return Promise.reject(err);\n            }\n\n            let now = Date.now();\n            let issuedAtMSec = claims.iat * 1000;\n            let expiresAtMSec = claims.exp * 1000;\n            let tenMinutesInMsec = 1000 * 60 * 10;\n\n            if (issuedAtMSec - tenMinutesInMsec >= now  || expiresAtMSec + tenMinutesInMsec  this.loadJwks()\n            };\n\n            if (this.requestAccessToken && !this.checkAtHash(validationParams)) {\n                let err = \"Wrong at_hash\";\n                console.warn(err);\n                return Promise.reject(err);\n            }\n\n            return this.checkSignature(validationParams).then(_ => {\n                let result: ParsedIdToken = {\n                    idToken: idToken,\n                    idTokenClaims: claims,\n                    idTokenClaimsJson: claimsJson,\n                    idTokenHeader: header,\n                    idTokenHeaderJson: headerJson,\n                    idTokenExpiresAt: expiresAtMSec,\n                };\n                return result;\n            }) \n\n    }\n    \n    /**\n     * Returns the received claims about the user.\n     */\n    public getIdentityClaims(): object {\n        var claims = this._storage.getItem(\"id_token_claims_obj\");\n        if (!claims) return null;\n        return JSON.parse(claims);\n    }\n    \n    /**\n     * Returns the current id_token.\n     */\n    public getIdToken(): string {\n        return this._storage.getItem(\"id_token\");\n    }\n    \n    private padBase64(base64data): string {\n        while (base64data.length % 4 !== 0) {\n            base64data += \"=\";\n        }\n        return base64data;\n    }\n\n    /**\n     * Returns the current access_token.\n     */\n    public getAccessToken(): string {\n        return this._storage.getItem(\"access_token\");\n    };\n\n    /**\n     * Returns the expiration date of the access_token\n     * as milliseconds since 1970.\n     */\n    public getAccessTokenExpiration(): number {\n        return parseInt(this._storage.getItem(\"expires_at\"));\n    }\n\n    /**\n     * Returns the expiration date of the id_token\n     * as milliseconds since 1970.\n     */\n    public getIdTokenExpiration(): number {\n        return parseInt(this._storage.getItem(\"id_token_expires_at\"));\n    }\n\n    /**\n     * Checkes, whether there is a valid access_token.\n    */\n    public hasValidAccessToken(): boolean {\n        if (this.getAccessToken()) {\n\n            var expiresAt = this._storage.getItem(\"expires_at\");\n            var now = new Date();\n            if (expiresAt && parseInt(expiresAt)  -1) {\n            logoutUrl = this.logoutUrl.replace(/\\{\\{id_token\\}\\}/, id_token);\n        }\n        else {\n            logoutUrl = this.logoutUrl + \"?id_token_hint=\" \n                                + encodeURIComponent(id_token)\n                                + \"&post_logout_redirect_uri=\"\n                                + encodeURIComponent(this.postLogoutRedirectUri || this.redirectUri);\n        }\n        location.href = logoutUrl;\n    };\n\n    /**\n     * @ignore\n     */\n    public createAndSaveNonce(): Promise {\n        var that = this;\n        return this.createNonce().then(function (nonce: any) {\n            that._storage.setItem(\"nonce\", nonce);\n            return nonce;\n        })\n    };\n\n    protected createNonce(): Promise {\n        \n        return new Promise((resolve, reject) => { \n        \n            if (this.rngUrl) {\n                throw new Error(\"createNonce with rng-web-api has not been implemented so far\");\n            }\n            else {\n                var text = \"\";\n                var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n                for (var i = 0; i  {\n        if (!this.tokenValidationHandler) {\n            console.warn('No tokenValidationHandler configured. Cannot check signature.');\n            return Promise.resolve(null);\n        }\n        return this.tokenValidationHandler.validateSignature(params);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlHelperService.html":{"url":"injectables/UrlHelperService.html","title":"injectable - UrlHelperService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UrlHelperService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/url-helper.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public getHashFragmentParams\n                                    \n                                    \n                                        Public parseQueryString\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getHashFragmentParams\n                                \n                            \n                            \n                                \n                                        \n                                    getHashFragmentParams(customHashFragment: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/url-helper.service.ts:6\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     object\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public parseQueryString\n                                \n                            \n                            \n                                \n                                        \n                                    parseQueryString(queryString: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/url-helper.service.ts:29\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     object\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlHelperService {\n\n    public getHashFragmentParams(customHashFragment?: string): object {\n        \n        let hash = customHashFragment || window.location.hash;\n\n        hash = decodeURIComponent(hash);\n\n        if (hash.indexOf(\"#\") !== 0) {\n            return {};\n        }\n\n        let questionMarkPosition = hash.indexOf('?');\n        \n        if (questionMarkPosition > -1) {\n            hash = hash.substr(questionMarkPosition+1);\n        }\n        else {\n            hash = hash.substr(1);\n        }\n\n        return this.parseQueryString(hash);\n\n    };\n\n    public parseQueryString(queryString: string): object {\n        var data = {}, pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\n\n        if (queryString === null) {\n            return data;\n        }\n\n        pairs = queryString.split(\"&\");\n\n        for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractValidationHandler.html":{"url":"classes/AbstractValidationHandler.html","title":"class - AbstractValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractValidationHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/token-validation/validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                This abstract implementation of ValidationHandler already implements\nthe method validateAtHash. However, to make use of it,\nyou have to override the method calcHash.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationHandler\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Protected calcHash\n                                    \n                                    \n                                        Protected inferHashAlgorithm\n                                    \n                                    \n                                         validateAtHash\n                                    \n                                    \n                                         validateSignature\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected calcHash\n                                \n                            \n                            \n                                \n                                        \n                                    calcHash(valueToHash: string, algorithm: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:87\n                                        \n                                    \n            \n                            \n                                \n                                        Calculates the hash for the passed value by using\n            the passed hash algorithm.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              valueToHash\n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              algorithm\n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Protected inferHashAlgorithm\n                                \n                            \n                            \n                                \n                                        \n                                    inferHashAlgorithm(jwtHeader: object)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:70\n                                        \n                                    \n            \n                            \n                                \n                                        Infers the name of the hash algorithm to use\n            from the alg field of an id_token.\n            \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              jwtHeader\n                                                              \n                                                              \n                                                              the id_token's parsed header\n            \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     string\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     validateAtHash\n                                \n                            \n                            \n                                \n            validateAtHash(params: ValidationParams)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:42\n                                        \n                                    \n            \n                            \n                                \n                                        Validates the at_hash in an id_token against the received access_token.\n            \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     validateSignature\n                                \n                            \n                            \n                                \n                                        \n                                    validateSignature(validationParams: ValidationParams)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:37\n                                        \n                                    \n            \n                            \n                                \n                                        Validates the signature of an id_token.\n            \n            \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ValidationParams {\n    idToken: string;\n    accessToken: string;\n    idTokenHeader: object;\n    idTokenClaims: object;\n    jwks: object;\n    loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to \n * validate tokens.\n */\nexport abstract class ValidationHandler {\n\n    /**\n     * Validates the signature of an id_token.\n     */\n    public abstract validateSignature(validationParams: ValidationParams): Promise;    \n    \n    /**\n     * Validates the at_hash in an id_token against the received access_token.\n     */\n    public abstract  validateAtHash(validationParams: ValidationParams): boolean;    \n} \n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n*/\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n    \n    /**\n     * Validates the signature of an id_token.\n    */\n    abstract validateSignature(validationParams: ValidationParams): Promise;    \n    \n    /**\n     * Validates the at_hash in an id_token against the received access_token.\n     */    \n    validateAtHash(params: ValidationParams): boolean {\n        \n        let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n        var tokenHash = this.calcHash(params.accessToken, hashAlg); //sha256(accessToken, { asString: true });\n        \n        var leftMostHalf = tokenHash.substr(0, tokenHash.length / 2 );\n        \n        var tokenHashBase64 = btoa(leftMostHalf);\n\n        var atHash = tokenHashBase64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n        var claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, \"\");\n        var atHash = tokenHashBase64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n\n        if (atHash != claimsAtHash) {\n            console.error(\"exptected at_hash: \" + atHash);    \n            console.error(\"actual at_hash: \" + claimsAtHash);\n        }\n        \n        return (atHash == claimsAtHash);\n    }\n\n    /**\n     * Infers the name of the hash algorithm to use\n     * from the alg field of an id_token.\n     * \n     * @param jwtHeader the id_token's parsed header\n     */\n    protected inferHashAlgorithm(jwtHeader: object): string {\n        let alg: string = jwtHeader['alg'];\n\n        if (!alg.match(/^.S[0-9]{3}$/)) {\n            throw new Error('Algorithm not supported: ' + alg);\n        }\n\n        return 'sha' + alg.substr(2);\n    }\n\n    /**\n     * Calculates the hash for the passed value by using\n     * the passed hash algorithm.\n     * \n     * @param valueToHash \n     * @param algorithm \n     */\n    protected abstract calcHash(valueToHash: string, algorithm: string): string;\n    \n\n\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwksValidationHandler.html":{"url":"classes/JwksValidationHandler.html","title":"class - JwksValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  JwksValidationHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/token-validation/jwks-validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                Validates the signature of an id_token against one\nof the keys of an JSON Web Key Set (jwks).\nThis jwks can be provided by the discovery document.\n\n            \n\n            \n                Extends\n            \n            \n                    AbstractValidationHandler\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         allowedAlgorithms\n                                    \n                                    \n                                         gracePeriodInSec\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         calcHash\n                                    \n                                    \n                                         toByteArrayAsString\n                                    \n                                    \n                                         validateSignature\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     calcHash\n                                \n                            \n                            \n                                \n            calcHash(valueToHash: string, algorithm: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/jwks-validation-handler.ts:107\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     toByteArrayAsString\n                                \n                            \n                            \n                                \n            toByteArrayAsString(hexString: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/jwks-validation-handler.ts:114\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     validateSignature\n                                \n                            \n                            \n                                \n            validateSignature(params: ValidationParams, retry: boolean)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/jwks-validation-handler.ts:25\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     allowedAlgorithms\n                                \n                            \n                            \n                                \n                                    allowedAlgorithms:     string[]\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string[]\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/token-validation/jwks-validation-handler.ts:17\n                                        \n                                    \n            \n                            \n                                \n                                    Allowed algorithms\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     gracePeriodInSec\n                                \n                            \n                            \n                                \n                                    gracePeriodInSec:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 600\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/token-validation/jwks-validation-handler.ts:23\n                                        \n                                    \n            \n                            \n                                \n                                    Time period in seconds the timestamp in the signature can\n            differ from the current time.\n            \n                                \n                            \n            \n                        \n                    \n            \n    \n\n\n    \n        import { ValidationHandler, AbstractValidationHandler, ValidationParams } from \"./validation-handler\";\n\ndeclare var require: any;\nlet rs = require('jsrsasign');\n\n/**\n * Validates the signature of an id_token against one\n * of the keys of an JSON Web Key Set (jwks).\n * \n * This jwks can be provided by the discovery document.\n*/\nexport class JwksValidationHandler extends AbstractValidationHandler {\n    \n    /**\n     * Allowed algorithms\n     */\n    allowedAlgorithms: string[] = ['HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'PS256', 'PS384', 'PS512']\n    \n    /**\n     * Time period in seconds the timestamp in the signature can\n     * differ from the current time.\n     */\n    gracePeriodInSec: number = 600;\n\n    validateSignature(params: ValidationParams, retry: boolean = false): Promise {\n        if (!params.idToken) throw new Error('Parameter idToken expected!');\n        if (!params.idTokenHeader) throw new Error('Parameter idTokenHandler expected.');\n        if (!params.jwks) throw new Error('Parameter jwks expected!');\n        \n        if (!params.jwks['keys'] || !Array.isArray(params.jwks['keys']) || params.jwks['keys'].length == 0) {\n            throw new Error('Array keys in jwks missing!');\n        }\n\n        console.debug('validateSignature: retry', retry);\n        \n        let kid: string = params.idTokenHeader['kid'];\n        let keys: object[] = params.jwks['keys'];\n        let key: object;\n        \n        let alg = params.idTokenHeader['alg'];\n\n        if (kid) {\n            key = keys.find(k => k['kid'] == kid && k['use'] == 'sig');\n        }\n        else {\n            let kty = this.alg2kty(alg)\n            let matchingKeys = keys.filter(k => k['kty'] == kty && k['use'] == 'sig');\n            \n            /*\n            if (matchingKeys.length == 0) {\n                let error = 'No matching key found.';\n                console.error(error);\n                return Promise.reject(error);\n            }*/\n            if (matchingKeys.length > 1) {\n                let error = 'More than one matching key found. Please specify a kid in the id_token header.';\n                console.error(error);\n                return Promise.reject(error);\n            }\n            else if (matchingKeys.length == 1) {\n               key = matchingKeys[0];\n            }\n        }\n\n        if (!key && !retry && params.loadKeys) {\n            return params\n                    .loadKeys()\n                    .then(keys => params.jwks = keys)\n                    .then(_ => this.validateSignature(params, true));\n        }\n        \n        if (!key && retry && !kid) {\n            let error = 'No matching key found.';\n            console.error(error);\n            return Promise.reject(error);\n        }\n        \n        if (!key && retry && kid) {\n            let error = 'expected key not found in property jwks. '\n                            + 'This property is most likely loaded with the '\n                            + 'discovery document. '\n                            + 'Expected key id (kid): ' + kid;\n    \n            console.error(error);\n            return Promise.reject(error);\n        }\n    \n        let keyObj = rs.KEYUTIL.getKey(key);\n        let isValid = rs.KJUR.jws.JWS.verifyJWT(params.idToken, keyObj, { alg: this.allowedAlgorithms, gracePeriod: this.gracePeriodInSec });\n        \n        if (isValid) {\n            return Promise.resolve();\n        }\n        else {\n            return Promise.reject('Signature not valid');\n        }\n    }\n\n    private alg2kty(alg: string) {\n        switch(alg.charAt(0)) {\n            case 'R': return 'RSA';\n            case 'E': return 'EC';\n            default: throw new Error('Cannot infer kty from alg: ' + alg);\n        }\n    }\n\n    calcHash(valueToHash: string, algorithm: string): string {\n        let hashAlg = new rs.KJUR.crypto.MessageDigest({alg: algorithm});\n        let result = hashAlg.digestString(valueToHash);\n        let byteArrayAsString = this.toByteArrayAsString(result);\n        return byteArrayAsString;\n    }\n\n    toByteArrayAsString(hexString: string) {\n        let result: string = \"\";\n        for(let i=0; i\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOptions.html":{"url":"classes/LoginOptions.html","title":"class - LoginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOptions\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/types.ts\n        \n\n            \n                Description\n            \n            \n                Additional options that can be passt to tryLogin.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         customHashFragment\n                                    \n                                    \n                                         disableOAuth2StateCheck\n                                    \n                                    \n                                         onLoginError\n                                    \n                                    \n                                         onTokenReceived\n                                    \n                                    \n                                         validationHandler\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     customHashFragment\n                                \n                            \n                            \n                                \n                                    customHashFragment:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:33\n                                        \n                                    \n            \n                            \n                                \n                                    A custom hash fragment to be used instead of the\n            actual one. This is used for silent refreshes, to \n            pass the iframes hash fragment to this method.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     disableOAuth2StateCheck\n                                \n                            \n                            \n                                \n                                    disableOAuth2StateCheck:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:43\n                                        \n                                    \n            \n                            \n                                \n                                    Set this to true to disable the oauth2 state\n            check which is a best practice to avoid\n            security attacks. \n            As OIDC defines a nonce check that includes\n            this, this can be set to true when only doing\n            OIDC.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onLoginError\n                                \n                            \n                            \n                                \n                                    onLoginError:     function\n            \n                                \n                            \n                                \n                                    \n                                        Type :     function\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:26\n                                        \n                                    \n            \n                            \n                                \n                                    Called when tryLogin detects that the auth server\n            included an error message into the hash fragment.\n            Deprecated:  Use property events on OAuthService instead.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     onTokenReceived\n                                \n                            \n                            \n                                \n                                    onTokenReceived:     function\n            \n                                \n                            \n                                \n                                    \n                                        Type :     function\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:12\n                                        \n                                    \n            \n                            \n                                \n                                    Is called, after a token has been received and \n            successfully validated.\n            Deprecated:  Use property events on OAuthService instead.\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     validationHandler\n                                \n                            \n                            \n                                \n                                    validationHandler:     function\n            \n                                \n                            \n                                \n                                    \n                                        Type :     function\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:18\n                                        \n                                    \n            \n                            \n                                \n                                    Hook, to validate the received tokens.\n            Deprecated:  Use property tokenValidationHandler on OAuthService instead.\n            \n                                \n                            \n            \n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n\n    /**\n     * Is called, after a token has been received and \n     * successfully validated.\n     * \n     * Deprecated:  Use property ``events`` on OAuthService instead.\n     */\n    onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n    \n    /**\n     * Hook, to validate the received tokens.\n     * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n     */\n    validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n    \n    /**\n     * Called when tryLogin detects that the auth server\n     * included an error message into the hash fragment.\n     * \n     * Deprecated:  Use property ``events`` on OAuthService instead.\n     */\n    onLoginError?: (params: object) => void;\n\n    /**\n     * A custom hash fragment to be used instead of the\n     * actual one. This is used for silent refreshes, to \n     * pass the iframes hash fragment to this method.\n    */\n    customHashFragment?: string;\n\n    /**\n     * Set this to true to disable the oauth2 state\n     * check which is a best practice to avoid\n     * security attacks. \n     * As OIDC defines a nonce check that includes\n     * this, this can be set to true when only doing\n     * OIDC.\n     */\n    disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for \n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n    abstract getItem(key: string): string | null;\n    abstract removeItem(key: string): void;\n    abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n    idToken: string;\n    accessToken: string;\n    idClaims?: object;\n    state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n    idToken: string;\n    idTokenClaims: object,\n    idTokenHeader: object,\n    idTokenClaimsJson: string,\n    idTokenHeaderJson: string,\n    idTokenExpiresAt: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullValidationHandler.html":{"url":"classes/NullValidationHandler.html","title":"class - NullValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  NullValidationHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/token-validation/null-validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                A validation handler that isn't validating nothing.\nCan be used to skip validation (on your own risk).\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValidationHandler\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         validateAtHash\n                                    \n                                    \n                                         validateSignature\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     validateAtHash\n                                \n                            \n                            \n                                \n            validateAtHash(validationParams: ValidationParams)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/null-validation-handler.ts:11\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     validateSignature\n                                \n                            \n                            \n                                \n            validateSignature(validationParams: ValidationParams)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/null-validation-handler.ts:8\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        import { ValidationHandler, AbstractValidationHandler, ValidationParams } from \"./validation-handler\";\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (on your own risk).\n */\nexport class NullValidationHandler implements ValidationHandler {\n    validateSignature(validationParams: ValidationParams): Promise {\n        return Promise.resolve(null);\n    }\n    validateAtHash(validationParams: ValidationParams): boolean {\n        return true;\n    }\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorEvent.html":{"url":"classes/OAuthErrorEvent.html","title":"class - OAuthErrorEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OAuthEvent\n            \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(type: EventType, reason: object, params: object)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/events.ts:39\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export type EventType = \n'discovery_document_loaded'\n| 'received_first_token'\n| 'jwks_load_error'\n| 'invalid_nonce_in_state'\n| 'discovery_document_load_error'\n| 'discovery_document_validation_error'\n| 'user_profile_loaded'\n| 'user_profile_load_error'\n| 'token_received'\n| 'token_error'\n| 'token_refreshed'\n| 'token_refresh_error'\n| 'silent_refresh_error'\n| 'silently_refreshed'\n| 'silent_refresh_timeout'\n| 'token_validation_error'\n| 'token_expires';\n\n\nexport abstract class OAuthEvent {\n    constructor(\n        readonly type: EventType) {\n    }\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n    constructor(\n        type: EventType,\n        readonly info: any = null\n    ) {\n        super(type);\n    }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n\n    constructor(\n        type: EventType,\n        readonly reason: object,\n        readonly params: object = null\n    ) {\n        super(type);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthEvent.html":{"url":"classes/OAuthEvent.html","title":"class - OAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/events.ts\n        \n\n\n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(type: EventType)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/events.ts:21\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export type EventType = \n'discovery_document_loaded'\n| 'received_first_token'\n| 'jwks_load_error'\n| 'invalid_nonce_in_state'\n| 'discovery_document_load_error'\n| 'discovery_document_validation_error'\n| 'user_profile_loaded'\n| 'user_profile_load_error'\n| 'token_received'\n| 'token_error'\n| 'token_refreshed'\n| 'token_refresh_error'\n| 'silent_refresh_error'\n| 'silently_refreshed'\n| 'silent_refresh_timeout'\n| 'token_validation_error'\n| 'token_expires';\n\n\nexport abstract class OAuthEvent {\n    constructor(\n        readonly type: EventType) {\n    }\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n    constructor(\n        type: EventType,\n        readonly info: any = null\n    ) {\n        super(type);\n    }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n\n    constructor(\n        type: EventType,\n        readonly reason: object,\n        readonly params: object = null\n    ) {\n        super(type);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthInfoEvent.html":{"url":"classes/OAuthInfoEvent.html","title":"class - OAuthInfoEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthInfoEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OAuthEvent\n            \n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(type: EventType, info: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/events.ts:30\n                                        \n                                    \n            \n                        \n                    \n            \n\n\n\n    \n\n\n    \n        export type EventType = \n'discovery_document_loaded'\n| 'received_first_token'\n| 'jwks_load_error'\n| 'invalid_nonce_in_state'\n| 'discovery_document_load_error'\n| 'discovery_document_validation_error'\n| 'user_profile_loaded'\n| 'user_profile_load_error'\n| 'token_received'\n| 'token_error'\n| 'token_refreshed'\n| 'token_refresh_error'\n| 'silent_refresh_error'\n| 'silently_refreshed'\n| 'silent_refresh_timeout'\n| 'token_validation_error'\n| 'token_expires';\n\n\nexport abstract class OAuthEvent {\n    constructor(\n        readonly type: EventType) {\n    }\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n    constructor(\n        type: EventType,\n        readonly info: any = null\n    ) {\n        super(type);\n    }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n\n    constructor(\n        type: EventType,\n        readonly reason: object,\n        readonly params: object = null\n    ) {\n        super(type);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthStorage.html":{"url":"classes/OAuthStorage.html","title":"class - OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthStorage\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/types.ts\n        \n\n            \n                Description\n            \n            \n                Defines a simple storage that can be used for \nstoring the tokens at client side.\nIs compatible to localStorage and sessionStorage,\nbut you can also create your own implementations.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         getItem\n                                    \n                                    \n                                         removeItem\n                                    \n                                    \n                                         setItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getItem\n                                \n                            \n                            \n                                \n                                        \n                                    getItem(key: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/types.ts:53\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     string|\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     removeItem\n                                \n                            \n                            \n                                \n                                        \n                                    removeItem(key: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/types.ts:54\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setItem\n                                \n                            \n                            \n                                \n                                        \n                                    setItem(key: string, data: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/types.ts:55\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export class LoginOptions {\n\n    /**\n     * Is called, after a token has been received and \n     * successfully validated.\n     * \n     * Deprecated:  Use property ``events`` on OAuthService instead.\n     */\n    onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n    \n    /**\n     * Hook, to validate the received tokens.\n     * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n     */\n    validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n    \n    /**\n     * Called when tryLogin detects that the auth server\n     * included an error message into the hash fragment.\n     * \n     * Deprecated:  Use property ``events`` on OAuthService instead.\n     */\n    onLoginError?: (params: object) => void;\n\n    /**\n     * A custom hash fragment to be used instead of the\n     * actual one. This is used for silent refreshes, to \n     * pass the iframes hash fragment to this method.\n    */\n    customHashFragment?: string;\n\n    /**\n     * Set this to true to disable the oauth2 state\n     * check which is a best practice to avoid\n     * security attacks. \n     * As OIDC defines a nonce check that includes\n     * this, this can be set to true when only doing\n     * OIDC.\n     */\n    disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for \n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n    abstract getItem(key: string): string | null;\n    abstract removeItem(key: string): void;\n    abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n    idToken: string;\n    accessToken: string;\n    idClaims?: object;\n    state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n    idToken: string;\n    idTokenClaims: object,\n    idTokenHeader: object,\n    idTokenClaimsJson: string,\n    idTokenHeaderJson: string,\n    idTokenExpiresAt: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthSuccessEvent.html":{"url":"classes/OAuthSuccessEvent.html","title":"class - OAuthSuccessEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthSuccessEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/events.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OAuthEvent\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType = \n'discovery_document_loaded'\n| 'received_first_token'\n| 'jwks_load_error'\n| 'invalid_nonce_in_state'\n| 'discovery_document_load_error'\n| 'discovery_document_validation_error'\n| 'user_profile_loaded'\n| 'user_profile_load_error'\n| 'token_received'\n| 'token_error'\n| 'token_refreshed'\n| 'token_refresh_error'\n| 'silent_refresh_error'\n| 'silently_refreshed'\n| 'silent_refresh_timeout'\n| 'token_validation_error'\n| 'token_expires';\n\n\nexport abstract class OAuthEvent {\n    constructor(\n        readonly type: EventType) {\n    }\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n    constructor(\n        type: EventType,\n        readonly info: any = null\n    ) {\n        super(type);\n    }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n\n    constructor(\n        type: EventType,\n        readonly reason: object,\n        readonly params: object = null\n    ) {\n        super(type);\n    }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReceivedTokens.html":{"url":"classes/ReceivedTokens.html","title":"class - ReceivedTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  ReceivedTokens\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the received tokens, the received state\nand the parsed claims from the id-token.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         accessToken\n                                    \n                                    \n                                         idClaims\n                                    \n                                    \n                                         idToken\n                                    \n                                    \n                                         state\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     accessToken\n                                \n                            \n                            \n                                \n                                    accessToken:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:64\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     idClaims\n                                \n                            \n                            \n                                \n                                    idClaims:     object\n            \n                                \n                            \n                                \n                                    \n                                        Type :     object\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:65\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     idToken\n                                \n                            \n                            \n                                \n                                    idToken:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:63\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     state\n                                \n                            \n                            \n                                \n                                    state:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/types.ts:66\n                                        \n                                    \n            \n            \n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n\n    /**\n     * Is called, after a token has been received and \n     * successfully validated.\n     * \n     * Deprecated:  Use property ``events`` on OAuthService instead.\n     */\n    onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n    \n    /**\n     * Hook, to validate the received tokens.\n     * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n     */\n    validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n    \n    /**\n     * Called when tryLogin detects that the auth server\n     * included an error message into the hash fragment.\n     * \n     * Deprecated:  Use property ``events`` on OAuthService instead.\n     */\n    onLoginError?: (params: object) => void;\n\n    /**\n     * A custom hash fragment to be used instead of the\n     * actual one. This is used for silent refreshes, to \n     * pass the iframes hash fragment to this method.\n    */\n    customHashFragment?: string;\n\n    /**\n     * Set this to true to disable the oauth2 state\n     * check which is a best practice to avoid\n     * security attacks. \n     * As OIDC defines a nonce check that includes\n     * this, this can be set to true when only doing\n     * OIDC.\n     */\n    disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for \n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n    abstract getItem(key: string): string | null;\n    abstract removeItem(key: string): void;\n    abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n    idToken: string;\n    accessToken: string;\n    idClaims?: object;\n    state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n    idToken: string;\n    idTokenClaims: object,\n    idTokenHeader: object,\n    idTokenClaimsJson: string,\n    idTokenHeaderJson: string,\n    idTokenExpiresAt: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationHandler.html":{"url":"classes/ValidationHandler.html","title":"class - ValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationHandler\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/token-validation/validation-handler.ts\n        \n\n            \n                Description\n            \n            \n                Interface for Handlers that are hooked in to \nvalidate tokens.\n\n            \n\n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public validateAtHash\n                                    \n                                    \n                                        Public validateSignature\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public validateAtHash\n                                \n                            \n                            \n                                \n                                        \n                                    validateAtHash(validationParams: ValidationParams)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:24\n                                        \n                                    \n            \n                            \n                                \n                                        Validates the at_hash in an id_token against the received access_token.\n            \n            \n                                        \n                                            Returns :     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public validateSignature\n                                \n                            \n                            \n                                \n                                        \n                                    validateSignature(validationParams: ValidationParams)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:19\n                                        \n                                    \n            \n                            \n                                \n                                        Validates the signature of an id_token.\n            \n            \n                                        \n                                            Returns :     Promise\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n\n\n    \n        export interface ValidationParams {\n    idToken: string;\n    accessToken: string;\n    idTokenHeader: object;\n    idTokenClaims: object;\n    jwks: object;\n    loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to \n * validate tokens.\n */\nexport abstract class ValidationHandler {\n\n    /**\n     * Validates the signature of an id_token.\n     */\n    public abstract validateSignature(validationParams: ValidationParams): Promise;    \n    \n    /**\n     * Validates the at_hash in an id_token against the received access_token.\n     */\n    public abstract  validateAtHash(validationParams: ValidationParams): boolean;    \n} \n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n*/\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n    \n    /**\n     * Validates the signature of an id_token.\n    */\n    abstract validateSignature(validationParams: ValidationParams): Promise;    \n    \n    /**\n     * Validates the at_hash in an id_token against the received access_token.\n     */    \n    validateAtHash(params: ValidationParams): boolean {\n        \n        let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n        var tokenHash = this.calcHash(params.accessToken, hashAlg); //sha256(accessToken, { asString: true });\n        \n        var leftMostHalf = tokenHash.substr(0, tokenHash.length / 2 );\n        \n        var tokenHashBase64 = btoa(leftMostHalf);\n\n        var atHash = tokenHashBase64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n        var claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, \"\");\n        var atHash = tokenHashBase64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n\n        if (atHash != claimsAtHash) {\n            console.error(\"exptected at_hash: \" + atHash);    \n            console.error(\"actual at_hash: \" + claimsAtHash);\n        }\n        \n        return (atHash == claimsAtHash);\n    }\n\n    /**\n     * Infers the name of the hash algorithm to use\n     * from the alg field of an id_token.\n     * \n     * @param jwtHeader the id_token's parsed header\n     */\n    protected inferHashAlgorithm(jwtHeader: object): string {\n        let alg: string = jwtHeader['alg'];\n\n        if (!alg.match(/^.S[0-9]{3}$/)) {\n            throw new Error('Algorithm not supported: ' + alg);\n        }\n\n        return 'sha' + alg.substr(2);\n    }\n\n    /**\n     * Calculates the hash for the passed value by using\n     * the passed hash algorithm.\n     * \n     * @param valueToHash \n     * @param algorithm \n     */\n    protected abstract calcHash(valueToHash: string, algorithm: string): string;\n    \n\n\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfig.html":{"url":"interfaces/AuthConfig.html","title":"interface - AuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthConfig\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/auth.config.ts\n        \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clearHashAfterLogin\n                                \n                                \n                                        clientId\n                                \n                                \n                                        customQueryParams\n                                \n                                \n                                        dummyClientSecret\n                                \n                                \n                                        issuer\n                                \n                                \n                                        jwks\n                                \n                                \n                                        loginUrl\n                                \n                                \n                                        logoutUrl\n                                \n                                \n                                        oidc\n                                \n                                \n                                        postLogoutRedirectUri\n                                \n                                \n                                        redirectUri\n                                \n                                \n                                        requestAccessToken\n                                \n                                \n                                        requireHttps\n                                \n                                \n                                        scope\n                                \n                                \n                                        showDebugInformation\n                                \n                                \n                                        silentRefreshIFrameName\n                                \n                                \n                                        silentRefreshMessagePrefix\n                                \n                                \n                                        silentRefreshRedirectUri\n                                \n                                \n                                        silentRefreshShowIFrame\n                                \n                                \n                                        siletRefreshTimeout\n                                \n                                \n                                        strictDiscoveryDocumentValidation\n                                \n                                \n                                        timeoutFactor\n                                \n                                \n                                        tokenEndpoint\n                                \n                                \n                                        userinfoEndpoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clearHashAfterLogin\n                                    \n                                \n                                \n                                    \n                                        clearHashAfterLogin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:56\n                                        \n                                    \n\n                            \n                                \n                                    Defines whether to clear the hash fragment after logging in.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:7\n                                        \n                                    \n\n                            \n                                \n                                    The client's id as registered with the auth server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customQueryParams\n                                    \n                                \n                                \n                                    \n                                        customQueryParams:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:127\n                                        \n                                    \n\n                            \n                                \n                                    Map with additional query parameter that are appended to\nthe request when initializing implicit flow.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dummyClientSecret\n                                    \n                                \n                                \n                                    \n                                        dummyClientSecret:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:100\n                                        \n                                    \n\n                            \n                                \n                                    Some auth servers don't allow using password flow\nw/o a client secreat while the standards do not\ndemand for it. In this case, you can set a password\nhere. As this passwort is exposed to the public\nit does not bring additional security and is therefore\nas good as using no password.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                    \n                                \n                                \n                                    \n                                        issuer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:46\n                                        \n                                    \n\n                            \n                                \n                                    The issuer's uri.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks\n                                    \n                                \n                                \n                                    \n                                        jwks:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:121\n                                        \n                                    \n\n                            \n                                \n                                    JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\nwith keys used to validate received id_tokens.\nThis is taken out of the disovery document. Can be set manually too.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginUrl\n                                    \n                                \n                                \n                                    \n                                        loginUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:24\n                                        \n                                    \n\n                            \n                                \n                                    The auth server's endpoint that allows to log\nthe user in when using implicit flow.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoutUrl\n                                    \n                                \n                                \n                                    \n                                        logoutUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:51\n                                        \n                                    \n\n                            \n                                \n                                    The logout url.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oidc\n                                    \n                                \n                                \n                                    \n                                        oidc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:35\n                                        \n                                    \n\n                            \n                                \n                                    Defines whether to use OpenId Connect during\nimplicit flow. Defaults to true.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postLogoutRedirectUri\n                                    \n                                \n                                \n                                    \n                                        postLogoutRedirectUri:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:18\n                                        \n                                    \n\n                            \n                                \n                                    An optional second redirectUri where the auth server\nredirects the user to after logging out.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectUri\n                                    \n                                \n                                \n                                    \n                                        redirectUri:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:12\n                                        \n                                    \n\n                            \n                                \n                                    The client's redirectUri as registered with the auth server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestAccessToken\n                                    \n                                \n                                \n                                    \n                                        requestAccessToken:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:41\n                                        \n                                    \n\n                            \n                                \n                                    Defines whether to request a access token during\nimplicit flow. Defaults to true;\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requireHttps\n                                    \n                                \n                                \n                                    \n                                        requireHttps:     boolean|\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean|\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:108\n                                        \n                                    \n\n                            \n                                \n                                    Defines whether https is required.\nThe default value is remoteOnly which only allows\nhttp for location, while every other domains need\nto be used with https.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:29\n                                        \n                                    \n\n                            \n                                \n                                    The requested scopes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDebugInformation\n                                    \n                                \n                                \n                                    \n                                        showDebugInformation:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:72\n                                        \n                                    \n\n                            \n                                \n                                    Defines whether additional debug information should \nbe shown at the console.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silentRefreshIFrameName\n                                    \n                                \n                                \n                                    \n                                        silentRefreshIFrameName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:129\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silentRefreshMessagePrefix\n                                    \n                                \n                                \n                                    \n                                        silentRefreshMessagePrefix:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:79\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silentRefreshRedirectUri\n                                    \n                                \n                                \n                                    \n                                        silentRefreshRedirectUri:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:77\n                                        \n                                    \n\n                            \n                                \n                                    The redirect uri used when doing silent refresh.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silentRefreshShowIFrame\n                                    \n                                \n                                \n                                    \n                                        silentRefreshShowIFrame:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:85\n                                        \n                                    \n\n                            \n                                \n                                    Set this to true to display the iframe used for \nsilent refresh for debugging.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        siletRefreshTimeout\n                                    \n                                \n                                \n                                    \n                                        siletRefreshTimeout:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:90\n                                        \n                                    \n\n                            \n                                \n                                    Timeout for silent refresh. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strictDiscoveryDocumentValidation\n                                    \n                                \n                                \n                                    \n                                        strictDiscoveryDocumentValidation:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:114\n                                        \n                                    \n\n                            \n                                \n                                    Defines whether every url provided by the discovery \ndocument has to start with the issuer's url.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutFactor\n                                    \n                                \n                                \n                                    \n                                        timeoutFactor:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:136\n                                        \n                                    \n\n                            \n                                \n                                    Defines when the token_timeout event should be raised.\nIf you set this to the default value 0.75, the event\nis triggered after 75% of the token's life time.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenEndpoint\n                                    \n                                \n                                \n                                    \n                                        tokenEndpoint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:61\n                                        \n                                    \n\n                            \n                                \n                                    Url of the token endpoint as defined by OpenId Connect and OAuth 2.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfoEndpoint\n                                    \n                                \n                                \n                                    \n                                        userinfoEndpoint:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/auth.config.ts:66\n                                        \n                                    \n\n                            \n                                \n                                    Url of the userinfo endpoint as defined by OpenId Connect.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AuthConfig {\n\n    /**\n     * The client's id as registered with the auth server\n     */\n    clientId?: string;\n    \n    /**\n     * The client's redirectUri as registered with the auth server\n     */\n    redirectUri?: string;\n    \n    /**\n     * An optional second redirectUri where the auth server\n     * redirects the user to after logging out.\n     */\n    postLogoutRedirectUri?: string;\n    \n    /**\n     * The auth server's endpoint that allows to log\n     * the user in when using implicit flow.\n     */\n    loginUrl?: string;\n    \n    /**\n     * The requested scopes\n     */\n    scope?: string;\n    \n    /**\n     * Defines whether to use OpenId Connect during\n     * implicit flow. Defaults to true.\n     */\n    oidc?: boolean;\n    \n    /**\n     * Defines whether to request a access token during\n     * implicit flow. Defaults to true;\n     */\n    requestAccessToken?: boolean;\n        \n    /**\n     * The issuer's uri.\n     */\n    issuer?: string;\n    \n    /**\n     * The logout url.\n     */\n    logoutUrl?: string;\n    \n    /**\n     * Defines whether to clear the hash fragment after logging in.\n     */\n    clearHashAfterLogin?: boolean;\n    \n    /**\n     * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\n     */\n    tokenEndpoint?: string;\n    \n    /**\n     * Url of the userinfo endpoint as defined by OpenId Connect.\n     */\n    userinfoEndpoint?: string;\n    \n    /**\n     * Defines whether additional debug information should \n     * be shown at the console.\n     */\n    showDebugInformation?: boolean;\n    \n    /**\n     * The redirect uri used when doing silent refresh.\n     */\n    silentRefreshRedirectUri?: string;\n    \n    silentRefreshMessagePrefix?: string;\n    \n    /**\n     * Set this to true to display the iframe used for \n     * silent refresh for debugging.\n     */\n    silentRefreshShowIFrame?: boolean;\n        \n    /**\n     * Timeout for silent refresh. \n     */\n    siletRefreshTimeout?: number; \n    \n    /**\n     * Some auth servers don't allow using password flow\n     * w/o a client secreat while the standards do not\n     * demand for it. In this case, you can set a password\n     * here. As this passwort is exposed to the public\n     * it does not bring additional security and is therefore\n     * as good as using no password.\n     */\n    dummyClientSecret?: string;\n    \n    /**\n     * Defines whether https is required.\n     * The default value is remoteOnly which only allows\n     * http for location, while every other domains need\n     * to be used with https.\n     */\n    requireHttps?: boolean | 'remoteOnly';\n        \n    /**\n     * Defines whether every url provided by the discovery \n     * document has to start with the issuer's url.\n     */\n    strictDiscoveryDocumentValidation?: boolean;\n    \n    /**\n     * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\n     * with keys used to validate received id_tokens.\n     * This is taken out of the disovery document. Can be set manually too.\n     */\n    jwks?: object;\n    \n    /**\n     * Map with additional query parameter that are appended to\n     * the request when initializing implicit flow.\n     */\n    customQueryParams?: object;\n    \n    silentRefreshIFrameName?: string;\n    \n    /**\n     * Defines when the token_timeout event should be raised.\n     * If you set this to the default value 0.75, the event\n     * is triggered after 75% of the token's life time.\n     */\n    timeoutFactor?: number;\n\n}\n\n\nexport const defaultConfig: AuthConfig = {\n    \n    clientId: \"\",\n    redirectUri: \"\",\n    postLogoutRedirectUri: \"\",\n    loginUrl: \"\",\n    scope: \"openid profile\",\n    oidc: true,\n    requestAccessToken: true,\n    issuer: \"\",\n    logoutUrl: \"\",\n    clearHashAfterLogin: true,\n    showDebugInformation: false,\n    silentRefreshRedirectUri: '',\n    silentRefreshMessagePrefix: '',\n    silentRefreshShowIFrame: false,\n    siletRefreshTimeout: 1000 * 20,\n    requireHttps: 'remoteOnly',\n    strictDiscoveryDocumentValidation: true,\n    silentRefreshIFrameName: 'angular-oauth-oidc-silent-refresh-iframe',\n    timeoutFactor: 0.75\n    \n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedIdToken.html":{"url":"interfaces/ParsedIdToken.html","title":"interface - ParsedIdToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParsedIdToken\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/types.ts\n        \n\n            \n                Description\n            \n            \n                Represents the parsed and validated id_token.\n\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        idToken\n                                \n                                \n                                        idTokenClaims\n                                \n                                \n                                        idTokenClaimsJson\n                                \n                                \n                                        idTokenExpiresAt\n                                \n                                \n                                        idTokenHeader\n                                \n                                \n                                        idTokenHeaderJson\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/types.ts:73\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/types.ts:74\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaimsJson\n                                    \n                                \n                                \n                                    \n                                        idTokenClaimsJson:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/types.ts:76\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenExpiresAt\n                                    \n                                \n                                \n                                    \n                                        idTokenExpiresAt:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/types.ts:78\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/types.ts:75\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeaderJson\n                                    \n                                \n                                \n                                    \n                                        idTokenHeaderJson:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/types.ts:77\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export class LoginOptions {\n\n    /**\n     * Is called, after a token has been received and \n     * successfully validated.\n     * \n     * Deprecated:  Use property ``events`` on OAuthService instead.\n     */\n    onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n    \n    /**\n     * Hook, to validate the received tokens.\n     * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n     */\n    validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n    \n    /**\n     * Called when tryLogin detects that the auth server\n     * included an error message into the hash fragment.\n     * \n     * Deprecated:  Use property ``events`` on OAuthService instead.\n     */\n    onLoginError?: (params: object) => void;\n\n    /**\n     * A custom hash fragment to be used instead of the\n     * actual one. This is used for silent refreshes, to \n     * pass the iframes hash fragment to this method.\n    */\n    customHashFragment?: string;\n\n    /**\n     * Set this to true to disable the oauth2 state\n     * check which is a best practice to avoid\n     * security attacks. \n     * As OIDC defines a nonce check that includes\n     * this, this can be set to true when only doing\n     * OIDC.\n     */\n    disableOAuth2StateCheck?: boolean;\n}\n\n/**\n * Defines a simple storage that can be used for \n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n    abstract getItem(key: string): string | null;\n    abstract removeItem(key: string): void;\n    abstract setItem(key: string, data: string): void;\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n    idToken: string;\n    accessToken: string;\n    idClaims?: object;\n    state?: string\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n    idToken: string;\n    idTokenClaims: object,\n    idTokenHeader: object,\n    idTokenClaimsJson: string,\n    idTokenHeaderJson: string,\n    idTokenExpiresAt: number;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationParams.html":{"url":"interfaces/ValidationParams.html","title":"interface - ValidationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidationParams\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/token-validation/validation-handler.ts\n        \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessToken\n                                \n                                \n                                        idToken\n                                \n                                \n                                        idTokenClaims\n                                \n                                \n                                        idTokenHeader\n                                \n                                \n                                        jwks\n                                \n                                \n                                        loadKeys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                    \n                                \n                                \n                                    \n                                        idToken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:2\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks\n                                    \n                                \n                                \n                                    \n                                        jwks:     object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadKeys\n                                    \n                                \n                                \n                                    \n                                        loadKeys:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/token-validation/validation-handler.ts:7\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationParams {\n    idToken: string;\n    accessToken: string;\n    idTokenHeader: object;\n    idTokenClaims: object;\n    jwks: object;\n    loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to \n * validate tokens.\n */\nexport abstract class ValidationHandler {\n\n    /**\n     * Validates the signature of an id_token.\n     */\n    public abstract validateSignature(validationParams: ValidationParams): Promise;    \n    \n    /**\n     * Validates the at_hash in an id_token against the received access_token.\n     */\n    public abstract  validateAtHash(validationParams: ValidationParams): boolean;    \n} \n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n*/\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n    \n    /**\n     * Validates the signature of an id_token.\n    */\n    abstract validateSignature(validationParams: ValidationParams): Promise;    \n    \n    /**\n     * Validates the at_hash in an id_token against the received access_token.\n     */    \n    validateAtHash(params: ValidationParams): boolean {\n        \n        let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n        var tokenHash = this.calcHash(params.accessToken, hashAlg); //sha256(accessToken, { asString: true });\n        \n        var leftMostHalf = tokenHash.substr(0, tokenHash.length / 2 );\n        \n        var tokenHashBase64 = btoa(leftMostHalf);\n\n        var atHash = tokenHashBase64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n        var claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, \"\");\n        var atHash = tokenHashBase64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n\n        if (atHash != claimsAtHash) {\n            console.error(\"exptected at_hash: \" + atHash);    \n            console.error(\"actual at_hash: \" + claimsAtHash);\n        }\n        \n        return (atHash == claimsAtHash);\n    }\n\n    /**\n     * Infers the name of the hash algorithm to use\n     * from the alg field of an id_token.\n     * \n     * @param jwtHeader the id_token's parsed header\n     */\n    protected inferHashAlgorithm(jwtHeader: object): string {\n        let alg: string = jwtHeader['alg'];\n\n        if (!alg.match(/^.S[0-9]{3}$/)) {\n            throw new Error('Algorithm not supported: ' + alg);\n        }\n\n        return 'sha' + alg.substr(2);\n    }\n\n    /**\n     * Calculates the hash for the passed value by using\n     * the passed hash algorithm.\n     * \n     * @param valueToHash \n     * @param algorithm \n     */\n    protected abstract calcHash(valueToHash: string, algorithm: string): string;\n    \n\n\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Functions\n\n\n    src/base64-helper.ts\n    \n                \n                \n                    \n                        \n                            \n                             b64DecodeUnicode\n                        \n                    \n                    \n                        \n    b64DecodeUnicode(str: undefined)\n                        \n                    \n    \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Variables\n\n\n    src/auth.config.ts\n    \n                \n                \n                    \n                        \n                            \n                             defaultConfig\n                        \n                    \n                    \n                        \n                            defaultConfig:     AuthConfig\n    \n                        \n                    \n                        \n                            \n                                Type :     AuthConfig\n    \n                            \n                        \n    \n    \n                \n            \n    \n    src/token-validation/jwks-validation-handler.ts\n    \n                \n                \n                    \n                        \n                            \n                             require\n                        \n                    \n                    \n                        \n                            require:     any\n    \n                        \n                    \n                        \n                            \n                                Type :     any\n    \n                            \n                        \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                             rs\n                        \n                    \n                    \n                        \n                            rs:     \n    \n                        \n                    \n    \n    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous - Type aliases\n\n\n    src/events.ts\n    \n            \n                \n                    \n                        \n                            EventType\n                        \n                    \n                    \n                        \n                            EventType:     ||||||||||||||||\n    \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
